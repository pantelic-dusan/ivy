Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/linspace","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/linspace","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace_non_standard","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/linspace","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/linspace","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace_non_standard","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/linspace","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace_non_standard","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/linspace","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/linspace.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/linspace.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace_non_standard.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/linspace.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/linspace.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace_non_standard.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/linspace.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace_non_standard.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/linspace.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[839,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[390,0,0,"-"],creation_functions:[391,0,0,"-"],data_type_functions:[396,0,0,"-"],data_types:[400,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{linspace:[392,2,1,""],ones:[393,2,1,""],tril:[394,2,1,""],zeros:[395,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[396,1,1,""],finfo:[398,2,1,""],iinfo:[399,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[396,3,1,""],bits:[396,3,1,""],eps:[396,3,1,""],max:[396,3,1,""],min:[396,3,1,""],smallest_normal:[396,3,1,""]},"ivy.functional.backends.numpy.core":{device:[438,0,0,"-"],general:[440,0,0,"-"],gradients:[473,0,0,"-"],image:[478,0,0,"-"],linear_algebra:[482,0,0,"-"],logic:[486,0,0,"-"],math:[487,0,0,"-"],random:[489,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[439,1,1,""],clear_mem_on_dev:[438,2,1,""],dev:[438,2,1,""],dev_from_str:[438,2,1,""],dev_to_str:[438,2,1,""],gpu_is_available:[438,2,1,""],num_gpus:[438,2,1,""],to_dev:[438,2,1,""],tpu_is_available:[438,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[439,3,1,""],start:[439,3,1,""],stop:[439,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[440,2,1,""],arange:[441,2,1,""],argmax:[442,2,1,""],argmin:[443,2,1,""],array:[444,2,1,""],asarray:[440,2,1,""],astype:[440,2,1,""],cast:[445,2,1,""],clip:[440,2,1,""],compile:[446,2,1,""],concatenate:[447,2,1,""],constant_pad:[440,2,1,""],container_types:[440,2,1,""],copy_array:[440,2,1,""],cumprod:[448,2,1,""],current_framework_str:[440,2,1,""],dtype:[449,2,1,""],dtype_bits:[450,2,1,""],dtype_from_str:[451,2,1,""],dtype_to_str:[452,2,1,""],equal:[440,2,1,""],floor:[440,2,1,""],floormod:[440,2,1,""],full:[453,2,1,""],gather:[454,2,1,""],gather_nd:[455,2,1,""],get_num_dims:[440,2,1,""],identity:[456,2,1,""],indices_where:[457,2,1,""],inplace_arrays_supported:[440,2,1,""],inplace_decrement:[458,2,1,""],inplace_increment:[459,2,1,""],inplace_update:[460,2,1,""],inplace_variables_supported:[440,2,1,""],is_array:[461,2,1,""],linear_resample:[462,2,1,""],logspace:[463,2,1,""],matmul:[440,2,1,""],meshgrid:[440,2,1,""],multiprocessing:[440,2,1,""],one_hot:[464,2,1,""],ones_like:[465,2,1,""],round:[440,2,1,""],scatter_flat:[466,2,1,""],scatter_nd:[467,2,1,""],shape:[440,2,1,""],split:[468,2,1,""],squeeze:[469,2,1,""],to_list:[440,2,1,""],to_numpy:[440,2,1,""],to_scalar:[440,2,1,""],transpose:[470,2,1,""],unstack:[471,2,1,""],where:[440,2,1,""],zero_pad:[440,2,1,""],zeros_like:[472,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[474,2,1,""],is_variable:[475,2,1,""],stop_gradient:[476,2,1,""],variable:[477,2,1,""],variable_data:[473,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[479,2,1,""],gradient_image:[480,2,1,""],stack_images:[481,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[483,2,1,""],qr:[484,2,1,""],vector_to_skew_symmetric_matrix:[485,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[488,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[490,2,1,""],randint:[489,2,1,""],random_normal:[489,2,1,""],random_uniform:[489,2,1,""],seed:[489,2,1,""],shuffle:[489,2,1,""]},"ivy.functional.ivy":{array_api:[840,0,0,"-"],core:[878,0,0,"-"],nn:[1216,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[841,0,0,"-"],creation_functions:[842,0,0,"-"],data_type_functions:[847,0,0,"-"],data_types:[850,0,0,"-"],elementwise_functions:[851,0,0,"-"],function_and_method_signatures:[864,0,0,"-"],linear_algebra:[865,0,0,"-"],manipulation_functions:[868,0,0,"-"],searching_functions:[870,0,0,"-"],set_functions:[871,0,0,"-"],sorting_functions:[872,0,0,"-"],statistical_functions:[874,0,0,"-"],utility_functions:[875,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[841,4,1,""],nan:[841,4,1,""],pi:[841,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{linspace:[843,2,1,""],ones:[844,2,1,""],tril:[845,2,1,""],zeros:[846,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[848,2,1,""],iinfo:[849,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[852,2,1,""],bitwise_and:[853,2,1,""],ceil:[854,2,1,""],cos:[855,2,1,""],cosh:[856,2,1,""],isfinite:[857,2,1,""],isnan:[858,2,1,""],less:[859,2,1,""],log1p:[860,2,1,""],log2:[861,2,1,""],logical_not:[862,2,1,""],sqrt:[863,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[866,2,1,""],vector_norm:[867,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[869,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[873,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[876,2,1,""],any:[877,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[879,0,0,"-"],compilation:[918,0,0,"-"],device:[920,0,0,"-"],dtype:[970,0,0,"-"],general:[994,0,0,"-"],gradients:[1090,0,0,"-"],image:[1106,0,0,"-"],linalg:[1113,0,0,"-"],logic:[1121,0,0,"-"],math:[1124,0,0,"-"],meta:[1140,0,0,"-"],multi_node:[1144,0,0,"-"],nest:[1188,0,0,"-"],random:[1200,0,0,"-"],reductions:[1207,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[880,2,1,""],builtin_add:[881,2,1,""],builtin_and:[882,2,1,""],builtin_bool:[883,2,1,""],builtin_contains:[884,2,1,""],builtin_deepcopy:[885,2,1,""],builtin_dir:[886,2,1,""],builtin_eq:[887,2,1,""],builtin_float:[888,2,1,""],builtin_floordiv:[889,2,1,""],builtin_ge:[890,2,1,""],builtin_getattr:[891,2,1,""],builtin_getattribute:[892,2,1,""],builtin_getitem:[893,2,1,""],builtin_gt:[894,2,1,""],builtin_int:[895,2,1,""],builtin_invert:[896,2,1,""],builtin_le:[897,2,1,""],builtin_lt:[898,2,1,""],builtin_mul:[899,2,1,""],builtin_ne:[900,2,1,""],builtin_neg:[901,2,1,""],builtin_or:[902,2,1,""],builtin_pos:[903,2,1,""],builtin_pow:[904,2,1,""],builtin_radd:[905,2,1,""],builtin_rand:[906,2,1,""],builtin_rfloordiv:[907,2,1,""],builtin_rmul:[908,2,1,""],builtin_ror:[909,2,1,""],builtin_rpow:[910,2,1,""],builtin_rsub:[911,2,1,""],builtin_rtruediv:[912,2,1,""],builtin_rxor:[913,2,1,""],builtin_setitem:[914,2,1,""],builtin_sub:[915,2,1,""],builtin_truediv:[916,2,1,""],builtin_xor:[917,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[919,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[920,1,1,""],DevClonedItem:[922,1,1,""],DevClonedIter:[923,1,1,""],DevClonedNest:[924,1,1,""],DevDistItem:[925,1,1,""],DevDistIter:[926,1,1,""],DevDistNest:[927,1,1,""],DevManager:[920,1,1,""],DevMapper:[929,1,1,""],DevMapperMultiProc:[930,1,1,""],MultiDev:[920,1,1,""],MultiDevItem:[932,1,1,""],MultiDevIter:[933,1,1,""],MultiDevNest:[934,1,1,""],Profiler:[935,1,1,""],clear_mem_on_dev:[936,2,1,""],default_device:[937,2,1,""],dev:[938,2,1,""],dev_clone:[939,2,1,""],dev_clone_array:[940,2,1,""],dev_clone_iter:[941,2,1,""],dev_clone_nest:[942,2,1,""],dev_dist:[943,2,1,""],dev_dist_array:[944,2,1,""],dev_dist_iter:[945,2,1,""],dev_dist_nest:[946,2,1,""],dev_from_str:[947,2,1,""],dev_to_str:[948,2,1,""],dev_unify:[949,2,1,""],dev_unify_array:[950,2,1,""],dev_unify_iter:[951,2,1,""],dev_unify_nest:[952,2,1,""],dev_util:[953,2,1,""],get_all_arrays_on_dev:[954,2,1,""],gpu_is_available:[955,2,1,""],num_arrays_on_dev:[956,2,1,""],num_cpu_cores:[957,2,1,""],num_gpus:[958,2,1,""],percent_used_mem_on_dev:[959,2,1,""],print_all_arrays_on_dev:[960,2,1,""],set_default_device:[961,2,1,""],set_split_factor:[962,2,1,""],split_factor:[963,2,1,""],split_func_call:[964,2,1,""],to_dev:[965,2,1,""],total_mem_on_dev:[966,2,1,""],tpu_is_available:[967,2,1,""],unset_default_device:[968,2,1,""],used_mem_on_dev:[969,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[920,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[920,3,1,""],da_tune_step:[920,3,1,""],dim_size:[920,3,1,""],ds_tune_step:[920,3,1,""],map:[920,3,1,""],repeated_config_check:[920,3,1,""],tune_step:[920,3,1,""],tuned:[920,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[929,3,1,""],map:[929,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[930,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[920,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[932,3,1,""],items:[932,3,1,""],keys:[932,3,1,""],shape:[932,3,1,""],values:[932,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[933,3,1,""],at_dev:[933,3,1,""],at_devs:[933,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[934,3,1,""],at_dev:[934,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[935,3,1,""],start:[935,3,1,""],stop:[935,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[970,1,1,""],DefaultFloatDtype:[970,1,1,""],DefaultIntDtype:[970,1,1,""],astype:[970,2,1,""],cast:[974,2,1,""],closest_valid_dtype:[975,2,1,""],convert_dtype:[976,2,1,""],default_dtype:[977,2,1,""],default_float_dtype:[978,2,1,""],default_int_dtype:[979,2,1,""],dtype:[980,2,1,""],dtype_bits:[981,2,1,""],dtype_from_str:[982,2,1,""],dtype_to_str:[983,2,1,""],invalid_dtype:[984,2,1,""],is_float_dtype:[985,2,1,""],is_int_dtype:[986,2,1,""],set_default_dtype:[987,2,1,""],set_default_float_dtype:[988,2,1,""],set_default_int_dtype:[989,2,1,""],unset_default_dtype:[990,2,1,""],unset_default_float_dtype:[991,2,1,""],unset_default_int_dtype:[992,2,1,""],valid_dtype:[993,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[970,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[970,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[970,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1018,2,1,""],abs:[995,2,1,""],all_equal:[996,2,1,""],arange:[997,2,1,""],arg_names:[998,2,1,""],argmax:[999,2,1,""],argmin:[1000,2,1,""],array:[1001,2,1,""],array_equal:[1002,2,1,""],arrays_equal:[1003,2,1,""],asarray:[994,2,1,""],assert_supports_inplace:[1004,2,1,""],broadcast_to:[1005,2,1,""],cache_fn:[1006,2,1,""],clip:[1007,2,1,""],clip_matrix_norm:[1008,2,1,""],clip_vector_norm:[1009,2,1,""],concatenate:[1010,2,1,""],constant_pad:[1011,2,1,""],container_types:[1012,2,1,""],copy_array:[1013,2,1,""],cross:[1014,2,1,""],cumprod:[1015,2,1,""],cumsum:[1016,2,1,""],current_framework_str:[1017,2,1,""],einops_rearrange:[1019,2,1,""],einops_reduce:[1020,2,1,""],einops_repeat:[1021,2,1,""],equal:[1022,2,1,""],exists:[1023,2,1,""],expand_dims:[1024,2,1,""],floor:[1025,2,1,""],floormod:[1026,2,1,""],fourier_encode:[1027,2,1,""],full:[1028,2,1,""],gather:[1029,2,1,""],gather_nd:[1030,2,1,""],get_all_arrays_in_memory:[1031,2,1,""],get_min_base:[1032,2,1,""],get_min_denominator:[1033,2,1,""],get_num_dims:[1034,2,1,""],get_referrers_recursive:[1035,2,1,""],has_nans:[1036,2,1,""],identity:[1037,2,1,""],indices_where:[1038,2,1,""],inplace_arrays_supported:[1039,2,1,""],inplace_decrement:[1040,2,1,""],inplace_increment:[1041,2,1,""],inplace_update:[1042,2,1,""],inplace_variables_supported:[1043,2,1,""],is_array:[1044,2,1,""],isinf:[1045,2,1,""],linear_resample:[1046,2,1,""],logspace:[1047,2,1,""],match_kwargs:[1048,2,1,""],matmul:[1049,2,1,""],maximum:[1050,2,1,""],meshgrid:[1051,2,1,""],minimum:[1052,2,1,""],multiprocessing:[1053,2,1,""],num_arrays_in_memory:[1054,2,1,""],one_hot:[1055,2,1,""],ones:[1056,2,1,""],ones_like:[1057,2,1,""],print_all_arrays_in_memory:[1058,2,1,""],queue_timeout:[1059,2,1,""],repeat:[1060,2,1,""],reshape:[1061,2,1,""],round:[1062,2,1,""],scatter_flat:[1063,2,1,""],scatter_nd:[1064,2,1,""],set_min_base:[1065,2,1,""],set_min_denominator:[1066,2,1,""],set_queue_timeout:[1067,2,1,""],set_tmp_dir:[1068,2,1,""],shape:[1069,2,1,""],shape_to_tuple:[1070,2,1,""],split:[1071,2,1,""],squeeze:[1072,2,1,""],stable_divide:[1073,2,1,""],stable_pow:[1074,2,1,""],stack:[1075,2,1,""],supports_inplace:[1076,2,1,""],swapaxes:[1077,2,1,""],tile:[1078,2,1,""],tmp_dir:[1079,2,1,""],to_list:[1080,2,1,""],to_numpy:[1081,2,1,""],to_scalar:[1082,2,1,""],transpose:[1083,2,1,""],try_else_none:[1084,2,1,""],unstack:[1085,2,1,""],value_is_nan:[1086,2,1,""],where:[1087,2,1,""],zero_pad:[1088,2,1,""],zeros_like:[1089,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1090,1,1,""],adam_step:[1092,2,1,""],adam_update:[1093,2,1,""],execute_with_gradients:[1094,2,1,""],gradient_descent_update:[1095,2,1,""],is_variable:[1096,2,1,""],lamb_update:[1097,2,1,""],lars_update:[1098,2,1,""],optimizer_update:[1099,2,1,""],set_with_grads:[1100,2,1,""],stop_gradient:[1101,2,1,""],unset_with_grads:[1102,2,1,""],variable:[1103,2,1,""],variable_data:[1104,2,1,""],with_grads:[1105,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1090,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1107,2,1,""],float_img_to_uint8_img:[1108,2,1,""],gradient_image:[1109,2,1,""],random_crop:[1110,2,1,""],stack_images:[1111,2,1,""],uint8_img_to_float_img:[1112,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1114,2,1,""],inv:[1115,2,1,""],matrix_norm:[1116,2,1,""],pinv:[1117,2,1,""],qr:[1118,2,1,""],svd:[1119,2,1,""],vector_to_skew_symmetric_matrix:[1120,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1122,2,1,""],logical_or:[1123,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1125,2,1,""],acosh:[1126,2,1,""],asin:[1127,2,1,""],atan2:[1129,2,1,""],atan:[1128,2,1,""],atanh:[1130,2,1,""],cosh:[1131,2,1,""],divide:[1132,2,1,""],erf:[1133,2,1,""],exp:[1134,2,1,""],log:[1135,2,1,""],sin:[1136,2,1,""],sinh:[1137,2,1,""],tan:[1138,2,1,""],tanh:[1139,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1141,2,1,""],maml_step:[1142,2,1,""],reptile_step:[1143,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1144,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1189,2,1,""],copy_nest:[1190,2,1,""],index_nest:[1191,2,1,""],map:[1192,2,1,""],map_nest_at_index:[1193,2,1,""],map_nest_at_indices:[1194,2,1,""],multi_index_nest:[1195,2,1,""],nested_indices_where:[1196,2,1,""],nested_map:[1197,2,1,""],set_nest_at_index:[1198,2,1,""],set_nest_at_indices:[1199,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1201,2,1,""],randint:[1202,2,1,""],random_normal:[1203,2,1,""],random_uniform:[1204,2,1,""],seed:[1205,2,1,""],shuffle:[1206,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1208,2,1,""],reduce_max:[1209,2,1,""],reduce_mean:[1210,2,1,""],reduce_min:[1211,2,1,""],reduce_prod:[1212,2,1,""],reduce_std:[1213,2,1,""],reduce_sum:[1214,2,1,""],reduce_var:[1215,2,1,""]},"ivy.functional.ivy.nn":{activations:[1217,0,0,"-"],layers:[1225,0,0,"-"],losses:[1238,0,0,"-"],norms:[1242,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1218,2,1,""],leaky_relu:[1219,2,1,""],relu:[1220,2,1,""],sigmoid:[1221,2,1,""],softmax:[1222,2,1,""],softplus:[1223,2,1,""],tanh:[1224,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1226,2,1,""],conv1d_transpose:[1227,2,1,""],conv2d:[1228,2,1,""],conv2d_transpose:[1229,2,1,""],conv3d:[1230,2,1,""],conv3d_transpose:[1231,2,1,""],depthwise_conv2d:[1232,2,1,""],dropout:[1233,2,1,""],linear:[1234,2,1,""],lstm_update:[1235,2,1,""],multi_head_attention:[1236,2,1,""],scaled_dot_product_attention:[1237,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1239,2,1,""],cross_entropy:[1240,2,1,""],sparse_cross_entropy:[1241,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1243,2,1,""]},"ivy.graph_compiler":{compiler:[1244,0,0,"-"],globals:[1247,0,0,"-"],graph:[1250,0,0,"-"],helpers:[1252,0,0,"-"],op_logging:[1253,0,0,"-"],param:[1254,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1245,2,1,""],show_graph:[1246,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1248,2,1,""],log_global_inference_rel_times:[1249,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1250,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1250,3,1,""],add_fn_to_dict:[1250,3,1,""],add_param:[1250,3,1,""],compiled:[1250,3,1,""],connect:[1250,3,1,""],debug_info:[1250,3,1,""],get_param:[1250,3,1,""],get_param_recursive:[1250,3,1,""],include_generators:[1250,3,1,""],increment_param_count:[1250,3,1,""],log_all_ops:[1250,3,1,""],params_all_empty:[1250,3,1,""],save_debug_info:[1250,3,1,""],set_param:[1250,3,1,""],show:[1250,3,1,""],show_debug_info:[1250,3,1,""],update_inference_times:[1250,3,1,""],with_array_caching:[1250,3,1,""]},"ivy.graph_compiler.param":{Param:[1254,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1254,3,1,""],count:[1254,3,1,""],depth:[1254,3,1,""],get:[1254,3,1,""],is_var:[1254,3,1,""],ptype:[1254,3,1,""],set:[1254,3,1,""],set_count:[1254,3,1,""],shape:[1254,3,1,""]},"ivy.stateful":{activations:[1259,0,0,"-"],converters:[1262,0,0,"-"],initializers:[1264,0,0,"-"],layers:[1273,0,0,"-"],module:[1285,0,0,"-"],norms:[1287,0,0,"-"],optimizers:[1289,0,0,"-"],sequential:[1295,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1260,1,1,""],GELU:[1261,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1260,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1261,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1263,2,1,""]},"ivy.stateful.initializers":{Constant:[1264,1,1,""],FirstLayerSiren:[1266,1,1,""],GlorotUniform:[1267,1,1,""],KaimingNormal:[1264,1,1,""],Ones:[1269,1,1,""],Siren:[1270,1,1,""],Uniform:[1264,1,1,""],Zeros:[1272,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1264,3,1,""],create_variables:[1264,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1266,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1267,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1264,3,1,""],create_variables:[1264,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1269,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1270,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1264,3,1,""],create_variables:[1264,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1272,3,1,""]},"ivy.stateful.layers":{Conv1D:[1274,1,1,""],Conv1DTranspose:[1275,1,1,""],Conv2D:[1276,1,1,""],Conv2DTranspose:[1277,1,1,""],Conv3D:[1278,1,1,""],Conv3DTranspose:[1279,1,1,""],DepthwiseConv2D:[1280,1,1,""],Dropout:[1281,1,1,""],LSTM:[1282,1,1,""],Linear:[1283,1,1,""],MultiHeadAttention:[1284,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1274,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1275,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1276,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1277,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1278,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1279,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1280,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1281,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1282,3,1,""],get_initial_state:[1282,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1283,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1284,3,1,""]},"ivy.stateful.module":{Module:[1286,1,1,""]},"ivy.stateful.module.Module":{__init__:[1286,3,1,""],build:[1286,3,1,""],build_mode:[1286,3,1,""],built:[1286,3,1,""],check_submod_rets:[1286,3,1,""],compile_graph:[1286,3,1,""],compile_on_next_step:[1286,3,1,""],get_mod_key:[1286,3,1,""],mod_depth:[1286,3,1,""],mod_height:[1286,3,1,""],mod_with_top_mod_key_chain:[1286,3,1,""],save_weights:[1286,3,1,""],show_graph:[1286,3,1,""],show_mod_in_top_mod:[1286,3,1,""],show_structure:[1286,3,1,""],show_v_in_top_v:[1286,3,1,""],sub_mods:[1286,3,1,""],track_submod_call_order:[1286,3,1,""],track_submod_rets:[1286,3,1,""],v_with_top_v_key_chains:[1286,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1288,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1288,3,1,""]},"ivy.stateful.optimizers":{Adam:[1290,1,1,""],LAMB:[1291,1,1,""],LARS:[1292,1,1,""],Optimizer:[1293,1,1,""],SGD:[1294,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1290,3,1,""],set_state:[1290,3,1,""],state:[1290,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1291,3,1,""],set_state:[1291,3,1,""],state:[1291,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1292,3,1,""],set_state:[1292,3,1,""],state:[1292,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1293,3,1,""],compile_graph:[1293,3,1,""],compile_on_next_step:[1293,3,1,""],set_state:[1293,3,1,""],show_graph:[1293,3,1,""],step:[1293,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1294,3,1,""],set_state:[1294,3,1,""],state:[1294,3,1,""]},"ivy.stateful.sequential":{Sequential:[1296,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1296,3,1,""]},"ivy.verbosity":{cprint:[1301,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1300,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1289,1290,1291],"02886":1256,"100":[1144,1256,1298],"141592653589793":841,"2021":1256,"2102":1256,"360":[851,855,1124,1136,1138],"718281828459045":841,"754":[841,847,848,851,863],"999":[1090,1092,1093,1097,1289,1290,1291],"abstract":[920,935,1256,1289,1293],"boolean":[40,41,842,843,851,853,858,862,920,955,967,970,984,993,994,996,1002,1003,1036,1038,1039,1043,1044,1045,1076,1086,1090,1096,1121,1122,1123,1140,1141,1142,1144],"break":43,"case":[15,18,19,40,41,42,43,851,852,920,959,966,969,994,997,1061,1063,1064,1113,1116,1118,1144,1188,1191,1195,1256,1273,1284,1285,1286,1289,1293,1302],"catch":[994,1018],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,396,438,439,847,849,920,922,923,924,925,926,927,929,930,932,933,934,935,947,948,970,994,998,1048,1090,1104,1144,1188,1190,1197,1238,1240,1241,1250,1254,1256,1259,1260,1261,1262,1263,1264,1266,1267,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298,1302],"default":[15,18,19,40,41,42,43,842,843,844,845,846,865,866,867,868,869,872,873,875,876,877,918,919,920,929,930,937,938,942,943,944,945,946,949,950,951,952,959,962,963,964,969,970,977,978,979,980,994,996,997,999,1000,1008,1009,1010,1011,1014,1015,1016,1027,1028,1029,1034,1036,1037,1046,1047,1048,1051,1053,1056,1059,1060,1063,1064,1067,1069,1071,1073,1074,1083,1085,1086,1090,1093,1095,1096,1097,1098,1099,1101,1105,1113,1116,1118,1140,1141,1142,1143,1144,1188,1189,1190,1192,1196,1197,1200,1201,1203,1204,1207,1209,1210,1211,1212,1213,1214,1215,1217,1218,1222,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296],"final":[40,41,43,994,1027,1047,1144,1273,1284,1299],"float":[40,41,42,43,391,392,841,842,843,844,846,847,848,851,852,863,865,867,879,898,904,920,929,930,953,959,962,966,969,970,978,985,994,997,1008,1009,1011,1027,1028,1032,1033,1047,1065,1066,1067,1073,1074,1090,1092,1093,1095,1097,1098,1099,1106,1108,1112,1124,1132,1140,1141,1142,1143,1144,1200,1203,1204,1217,1219,1225,1233,1236,1237,1238,1239,1240,1241,1242,1243,1273,1281,1284,1287,1288,1289,1290,1291,1292,1293,1294],"function":[15,40,41,43,392,393,394,395,398,399,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,841,843,844,845,846,848,849,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,869,873,876,877,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,922,923,924,925,926,927,929,930,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1256,1259,1260,1261,1289,1292,1293,1294,1298,1299,1302],"import":[43,1256,1299,1302],"int":[40,41,42,43,391,392,393,394,395,489,842,843,844,845,846,847,848,849,865,866,867,868,869,872,873,875,876,877,879,898,904,918,919,920,942,943,944,945,946,949,950,951,952,957,958,964,970,979,981,986,994,999,1000,1005,1010,1011,1015,1016,1019,1020,1021,1024,1027,1028,1029,1034,1037,1046,1047,1055,1056,1060,1061,1063,1064,1069,1070,1071,1072,1075,1077,1078,1083,1085,1088,1090,1092,1093,1097,1106,1110,1111,1113,1116,1140,1141,1142,1143,1144,1188,1197,1200,1201,1202,1204,1205,1207,1209,1210,1211,1212,1213,1214,1215,1217,1222,1225,1226,1227,1228,1229,1230,1231,1232,1236,1238,1240,1241,1242,1243,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1287,1288],"long":[43,1225,1235],"new":[40,41,43,489,842,844,846,851,856,860,861,970,974,994,995,1005,1019,1020,1021,1024,1027,1028,1029,1030,1056,1061,1063,1064,1065,1066,1073,1074,1075,1090,1093,1095,1097,1098,1099,1106,1108,1110,1112,1124,1126,1130,1131,1137,1139,1144,1188,1198,1199,1200,1201,1242,1243,1256,1262,1263,1273,1283,1287,1288,1289,1290,1291,1292,1293,1294,1299,1302],"public":[994,1012],"return":[15,16,17,18,19,40,41,42,43,489,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,872,873,875,876,877,879,898,904,918,919,920,929,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,955,956,958,959,963,964,965,966,967,969,970,974,975,976,977,978,979,980,981,982,983,984,985,986,993,994,995,996,997,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1034,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1060,1061,1062,1063,1064,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1092,1093,1094,1095,1096,1097,1098,1099,1101,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1188,1189,1190,1192,1196,1197,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1256,1262,1263,1273,1282,1283,1289,1293,1298,1299,1302],"short":[43,1225,1235,1256,1302],"static":[40,41,918,919],"super":1144,"true":[40,41,42,391,392,440,446,473,476,489,490,842,843,851,857,865,867,872,873,875,876,877,918,919,920,994,996,1004,1006,1023,1027,1036,1038,1086,1087,1090,1093,1095,1096,1097,1098,1099,1101,1113,1116,1140,1141,1142,1143,1144,1188,1189,1196,1200,1201,1207,1209,1210,1211,1212,1213,1214,1215,1217,1218,1225,1233,1238,1239,1240,1241,1244,1245,1246,1250,1273,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294],"try":[40,41,994,1084,1144],"var":[40,41,1140,1141,1142,1302],"while":[40,41,42,1144],AND:[851,853,875,876,1121,1122],But:1302,For:[43,851,852,994,997,1007,1075,1090,1096,1104,1113,1118,1124,1125,1256,1262,1263,1299,1302],Its:[1124,1128],NOT:[851,862],Not:841,One:[40,41,43,994,1020,1061,1200,1202,1302],Ones:[1256,1264],PRs:43,Such:[994,1012],That:1299,The:[15,16,17,18,19,40,41,42,43,842,845,851,852,853,855,857,859,863,865,867,868,869,872,873,875,876,877,879,898,904,918,919,920,929,930,936,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,959,962,963,964,965,966,969,970,974,975,976,981,982,983,984,993,994,997,1001,1002,1005,1006,1008,1009,1010,1011,1013,1014,1017,1018,1022,1027,1029,1030,1037,1040,1041,1042,1044,1046,1047,1049,1051,1053,1056,1057,1060,1061,1063,1064,1065,1066,1067,1070,1071,1072,1073,1074,1075,1078,1086,1089,1090,1092,1093,1095,1097,1098,1099,1101,1104,1106,1108,1110,1112,1113,1116,1118,1119,1124,1125,1127,1128,1132,1133,1134,1135,1136,1138,1140,1141,1142,1143,1144,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1256,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1287,1288,1289,1291,1292,1293,1299,1302],There:[43,1256,1299],These:[43,1256],Use:43,Used:[1188,1189,1196,1285,1286],Using:[1256,1257,1302],With:[40,41,1113,1116,1207,1209,1210,1211,1212,1213,1214,1215,1256,1298,1302],__array__:[994,1001],__call__:[1273,1284,1285,1286],__del__:1144,__dict__:[1144,1299],__enter__:1144,__exit__:1144,__getitem__:1144,__getstate__:1144,__init__:[40,41,42,43,59,60,83,214,396,397,438,439,520,651,920,921,928,929,930,931,932,933,934,935,970,971,972,973,1090,1091,1144,1148,1155,1250,1251,1254,1255,1256,1259,1260,1261,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298,1302],__iter__:1144,__len__:1144,__next__:1144,__pow__:43,__repr__:1144,_assign_vari:1298,_axi:1144,_base:[1188,1189,1196],_compute_node_da_ratio:1144,_compute_node_strs_da:1144,_concat_unify_arrai:1144,_counter:1144,_cur_framework:[43,1144],_da_direct:1144,_da_directions_flip:1144,_da_step_tim:1144,_da_tim:1144,_da_tune_count:1144,_data:1144,_delta_da_dim_s:1144,_delta_sf:1144,_dict:1144,_dim_siz:1144,_first_da_tune_step:1144,_first_ns_tune_step:1144,_fn:1144,_forward:[1256,1298],_get_kalman_param:1302,_get_prior:1302,_get_some_model:1302,_handle_flat_arrays_in_out:43,_index:[1188,1189,1196],_input_queu:1144,_length:1144,_max_depth:1144,_max_node_dim_step_ratio:1144,_max_node_dim_step_s:1144,_max_split_factor_step_s:1144,_mean_unify_arrai:1144,_min_bas:[994,1074,1242,1243,1287,1288],_min_denomin:[994,1073],_min_node_dim_s:1144,_min_sf_tune_step:1144,_min_unit_node_tune_step:1144,_model:1302,_native_wrapp:43,_node_mapp:1144,_node_percent_mem:1144,_node_str:1144,_node_str_da_ratio:1144,_node_strs_da:1144,_node_strs_kei:1144,_node_strs_n:1144,_node_util:1144,_ns_step_tim:1144,_ns_time:1144,_ns_tune_count:1144,_num_nod:1144,_num_work:1144,_observed_config:1144,_output_queu:1144,_paramet:1298,_percent_mem_inc_per_sf:1144,_percent_mem_inc_per_unit_da_dim:1144,_percent_util_inc_per_unit_da_dim:1144,_ret_fn:1144,_safety_factor:1144,_save_dir:1144,_shift_da_split:1144,_shift_n:1144,_slice:1144,_step:[1289,1293],_sum_unify_arrai:1144,_timeout:1144,_tune:1144,_tune_da:1144,_tune_n:1144,_tune_step:1144,_unit_da_tune_count:1144,_unroll_step:1302,_with_node_mappig:1144,_worker:1144,_worker_class:1144,_worker_fn:1144,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,920,929,935,1144,1285,1286,1289,1293],abil:1256,abl:[40,41],about:[847,848,849],abov:[43,842,845,1200,1202],above_height:[40,41],abs:[295,440,569,701,865,867,994,1144],absolut:[40,41,994,995],abstractmethod:1144,accept:[15,43,1256],access:[40,41,43,1299],accord:[40,41,847,848,994,1011,1029,1063,1064,1083,1088],accordingli:[865,867,875,876,877],accur:[59,396,438,439,920,932,933,934,935,970,1090,1250,1254,1264,1266,1267,1269,1270,1272],aco:[789,1124],acosh:[789,1124],across:[40,41,920,929,930,939,940,942,943,944,945,946,952,962,963,994,999,1000,1002,1003,1144,1188,1192],act:43,activ:[1218,1219,1220,1221,1222,1223,1224,1256,1260,1261],actual:1299,adam:[1090,1092,1093,1097,1256,1289,1291,1298],adam_step:1090,adam_upd:1090,adapt:[1090,1098,1289,1292],add:[40,41,43,1144,1238,1239,1240,1241,1242,1243,1256,1287,1288,1299],add_fn_to_dict:1250,add_param:1250,added:[43,994,1073,1074,1295,1296],adding:[994,1005],addit:[40,41,43,994,1019,1020,1021,1242,1243,1273,1283],address:43,adher:43,adjac:[994,997],adopt:[43,994,1012],affect:[994,997],affin:[1287,1288],after:[851,863,994,1046,1090,1093,1094,1095,1097,1098,1099,1106,1107,1242,1243,1289,1290,1291,1292,1293,1294,1302],after_1:[994,1011,1088],after_n:[994,1011,1088],again:43,against:[40,41,1113,1116,1207,1209,1210,1211,1212,1213,1214,1215],agnost:[43,1256,1298,1299],aim:1302,algebra:1113,algorithm:[1225,1226,1227,1228,1229,1230,1231,1232,1273,1274,1275,1276,1277,1278,1279,1280,1302],align:[40,41,43,994,1005],aliv:[920,954,956,960,994,1031,1054,1058],all:[15,16,17,18,19,40,41,43,111,237,425,548,679,842,845,865,867,868,869,875,918,919,920,929,954,960,994,995,996,1002,1003,1012,1031,1037,1058,1072,1113,1118,1140,1141,1142,1143,1144,1188,1189,1190,1196,1197,1200,1201,1204,1207,1209,1210,1211,1212,1213,1214,1215,1225,1235,1256,1299,1302],all_depth:[40,41],all_equ:994,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1188,all_tru:[40,41],alloc:[43,842,845,920,1144],allow:[994,1047,1048,1285,1286],allow_dupl:[994,1048],alon:[920,959,969,1144,1256],along:[40,41,43,489,865,866,867,868,869,872,873,875,876,877,920,943,944,945,946,949,950,951,952,964,994,1010,1015,1016,1029,1046,1047,1060,1071,1075,1078,1085,1113,1116,1140,1141,1142,1143,1144,1200,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],alongsid:[1298,1299],alpha:[1217,1219],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,920,1144],also:[40,41,43,994,997,1090,1093,1140,1141,1142,1143,1188,1189,1190,1196,1197,1225,1234,1256,1273,1283,1298],altern:1298,alwai:[40,41,43,1090,1096,1101],among:[40,41],amount:[920,966,1144,1256],angl:[1124,1125,1129],ani:[15,16,17,18,19,40,41,43,111,237,425,548,679,875,918,919,920,922,925,929,930,932,941,942,945,946,951,994,996,997,1001,1018,1019,1020,1021,1022,1023,1036,1044,1048,1073,1074,1090,1094,1144,1188,1189,1192,1196,1197,1198,1199,1200,1204,1256,1262,1263,1285,1286,1298,1299,1302],anoth:[40,41,43,970,976,1256],another_backend:43,anyth:[43,1302],anywai:43,apart:43,api:[1256,1257],appear:[43,994,1024],append:[40,41,1144],appli:[15,18,19,40,41,851,862,994,1019,1020,1021,1090,1097,1098,1113,1119,1121,1122,1123,1140,1141,1142,1188,1192,1195,1197,1217,1218,1219,1220,1221,1222,1223,1224,1225,1234,1236,1237,1242,1243,1256,1259,1260,1261,1287,1288],applic:[1188,1192,1197,1225,1236,1237,1256,1302],approxim:[43,851,852,860,861,879,904,1217,1218],arang:[131,295,440,489,569,701,994,1047],arbitrari:[40,41,920,949,950,952,1144],arc:[1124,1129],arcco:[1124,1125],arctan:[1124,1128],area:[851,852,1256],arg:[15,16,17,40,41,43,59,63,920,929,942,946,952,964,994,1019,1020,1021,1064,1144,1244,1245,1246,1250,1262,1263,1285,1286],arg_nam:994,arg_stateful_idx:[1244,1245,1246,1250,1285,1286],argmax:[131,440,569,701,994],argmin:[131,440,569,701,994],args_clon:1144,args_dist:1144,args_to_ivi:[15,1256],args_to_n:[15,1256],args_uni:1144,argsort:[108,234,422,545,676,872],argument:[15,16,17,18,19,40,41,42,43,59,63,918,919,920,929,930,942,946,952,994,997,998,1006,1018,1048,1064,1124,1125,1144,1188,1192,1262,1263,1285,1286],aris:[1256,1302],arithmet:[43,1207,1210,1213,1215],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:489,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,131,295,440,489,569,701,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,872,873,875,876,877,898,904,920,938,939,940,943,944,945,946,949,950,951,952,954,956,960,964,965,970,974,980,985,986,994,995,996,997,999,1000,1002,1003,1004,1005,1007,1008,1009,1010,1011,1013,1014,1015,1016,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1034,1036,1037,1038,1039,1040,1041,1042,1044,1045,1046,1047,1049,1050,1051,1052,1054,1055,1056,1057,1058,1060,1061,1062,1063,1064,1069,1071,1072,1075,1076,1077,1078,1080,1081,1082,1083,1085,1086,1087,1088,1089,1090,1092,1093,1096,1097,1101,1103,1104,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1144,1188,1190,1197,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1256,1257,1273,1281,1282,1284,1289,1293,1298,1299],arrang:[994,1019],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,391,392,393,394,395,396,398,399,841,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,872,873,875,876,877],array_api_methods_to_test:43,array_builtin:[43,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917],array_equ:[295,701,994],array_lik:[489,994,1001],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,994],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1256],arraywithgener:[22,1256],arraywithgradi:[24,1256],arraywithimag:[26,1256],arraywithlinalg:[28,1256],arraywithlog:[30,1256],arraywithmath:[32,1256],arraywithmeta:[34,1256],arraywithrandom:[36,1256],arraywithreduct:[38,1256],arriv:[40,41,42],articl:1256,arxiv:1256,as_arrai:[40,41,994,1034,1069],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[438,440,449,920,938,970,977,978,979,980],as_tensor:440,as_vari:[40,41],as_zero:[40,41],asarrai:[440,994],asin:[789,1124],asinh:[87,401,524,655,851],aspect:[1106,1111],assert:[40,41,994,1004,1144],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:994,associ:[43,1113,1120],assum:[1299,1302],astyp:[440,970],asynchron:[40,41,42],at_dev:[40,42,920,933,934],at_kei:[40,41],at_key_chain:[40,41],at_nod:1144,atan2:[789,1124],atan:[789,1124],atanh:[789,1124],attent:[43,1225,1236,1237,1273,1284],attribut:[0,6,40,41,847,848,849,994,1057,1089],audienc:[1256,1299],author:1256,automat:43,avail:[40,41,43,920,955,957,958,967,994,1020,1144],averag:[1090,1092,1093,1097,1140,1141,1142,1207,1210],average_across_step:[1140,1141,1142],avoid:[43,920,1144,1299],axes:[40,41,43,440,470,482,483,865,867,868,869,875,876,877,920,964,994,999,1000,1011,1024,1077,1083,1088,1113,1116,1144,1207,1209,1210,1211,1212,1213,1214,1215],axes_length:[40,41,994,1019,1020,1021],axi:[40,41,440,442,443,447,448,454,462,463,468,469,471,865,866,867,868,869,872,873,875,876,877,920,922,925,932,943,944,945,946,949,950,951,952,964,994,999,1000,1010,1011,1014,1015,1016,1024,1029,1046,1047,1060,1071,1072,1075,1077,1078,1085,1088,1144,1200,1206,1207,1209,1210,1211,1212,1213,1214,1215,1217,1222,1238,1240,1241],axis0:[40,41,994,1077],axis1:[40,41,865,866,994,1077],axis2:[865,866],back:[43,1285,1286,1289,1293],backend:[15,17,19,40,41,391,392,393,394,395,396,398,399,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,487,488,489,490,920,955,958,967,970,976,984,993,994,1039,1043,1090,1093,1095,1097,1098,1099,1104,1144,1256,1257,1262,1263,1289,1290,1291,1292,1293,1294,1298,1299,1302],backend_nam:43,background:[1256,1299],backprop:1302,backward:[875,876,877,1298],band:[994,1027],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,396,438,439,440,463,851,860,861,879,904,920,922,923,924,925,926,927,929,930,932,933,934,935,970,994,1032,1047,1065,1074,1090,1144,1207,1208,1250,1254,1256,1259,1260,1261,1264,1266,1267,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1302],basi:43,batch:[40,41,865,867,920,962,963,994,1027,1037,1106,1110,1113,1119,1140,1141,1142,1143,1144,1225,1234,1242,1243,1287,1288],batch_shap:[440,456,994,1037,1055,1106,1107,1108,1109,1110,1111,1112,1113,1120,1200,1201,1225,1235,1236,1237,1273,1282],batch_siz:[489,490,1144,1200,1201,1225,1226,1227,1228,1229,1230,1231,1232],bayesian:1302,becaus:[43,994,997],becom:[43,994,1007,1124,1129,1302],been:[994,1019,1020,1021,1200,1201],befor:[40,41,43,920,964,1140,1141,1142,1144,1188,1197,1207,1209,1210,1211,1212,1213,1214,1215,1225,1236,1237,1302],before_1:[994,1011,1088],before_n:[994,1011,1088],begin:[1188,1189,1196,1299],behaviour:[43,1302],behind:[1090,1093,1095,1097,1098,1099,1256],being:[40,41,43,994,997,1059,1067,1144],believ:43,belong:[40,41],below:[43,842,845,1256,1299,1302],below_depth:[40,41],benefit:1256,bernoul:[1225,1233,1273,1281],best:[43,994,1048,1256],beta1:[1090,1092,1093,1097,1289,1290,1291],beta2:[1090,1092,1093,1097,1289,1290,1291],beta:[1242,1243],between:[40,41,42,847,848,994,997,1113,1118,1188,1192,1200,1202,1238,1240,1241,1289,1291],bia:[1225,1234,1235,1273,1274,1275,1276,1277,1278,1279,1280,1283],bias_initi:[1273,1274,1275,1276,1277,1278,1279,1280,1283],bilinear:[1106,1107],bilinear_resampl:[166,349,478,612,774,1106],bilinearli:[1106,1107],binari:[851,853,1238,1239],binary_cross_entropi:1238,bit:[396,847,848,849,970,981,1106,1108,1112,1256],bitwis:[851,853],bitwise_and:[87,218,401,524,655,851],bitwise_oper:[0,7,8],block:[1256,1299],bool:[15,18,19,40,41,42,43,391,392,842,843,851,857,859,865,867,872,873,875,876,877,879,898,918,919,920,938,951,955,959,964,967,969,970,980,994,996,1002,1003,1015,1018,1022,1023,1027,1034,1036,1044,1048,1069,1071,1085,1086,1087,1090,1093,1094,1095,1096,1097,1098,1099,1101,1113,1116,1140,1141,1142,1143,1144,1188,1189,1190,1192,1196,1197,1200,1201,1207,1209,1210,1211,1212,1213,1214,1215,1217,1218,1225,1233,1262,1263,1273,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294],both:[43,994,1014],bottom:1256,boundari:[40,41,1200,1204],branch:[43,918,919],brittl:43,broadcast:[40,41,43,851,853,865,867,875,876,877,879,898,904,994,1005,1022,1050,1051,1052,1060,1113,1116,1124,1129,1132,1207,1209,1210,1211,1212,1213,1214,1215],broadcast_to:[295,701,994],build:[1144,1256,1273,1284,1285,1286],build_mod:[1273,1284,1285,1286],builder:1256,built:[920,994,997,1144,1273,1284,1285,1286],builtin:43,builtin_ab:[250,879],builtin_add:[250,879],builtin_and:[250,879],builtin_bool:[250,879],builtin_contain:[250,879],builtin_deepcopi:[250,879],builtin_dir:[250,879],builtin_eq:[250,879],builtin_float:[250,879],builtin_floordiv:[250,879],builtin_g:[250,879],builtin_getattr:[250,879],builtin_getattribut:[250,879],builtin_getitem:[250,879],builtin_gt:[250,879],builtin_int:[250,879],builtin_invert:[250,879],builtin_l:[250,879],builtin_lt:[250,557,688,879],builtin_mul:[250,879],builtin_n:[250,879],builtin_neg:[250,879],builtin_or:[250,879],builtin_po:[250,879],builtin_pow:[43,250,879],builtin_radd:[250,879],builtin_rand:[250,879],builtin_rfloordiv:[250,879],builtin_rmul:[250,879],builtin_ror:[250,879],builtin_rpow:[250,879],builtin_rsub:[250,879],builtin_rtruediv:[250,879],builtin_rxor:[250,879],builtin_setitem:[250,879],builtin_some_op:43,builtin_sub:[250,879],builtin_truediv:[250,879],builtin_xor:[250,879],busi:43,bypass:1299,cach:[920,936,994,1006],cache_fn:994,calcul:[40,41,42,43,851,852,860,861,863,879,904,1124,1132],call:[43,920,964,994,1059,1067,1084,1090,1094,1144,1188,1189,1192,1196,1273,1284,1285,1286,1289,1293,1299,1302],callabl:[40,41,918,919,920,929,930,964,994,1006,1018,1020,1048,1084,1140,1141,1142,1143,1144,1188,1192,1193,1194,1196,1197,1225,1236],can:[43,920,962,963,964,994,1061,1106,1108,1144,1256,1298,1299,1302],cancel_join_thread:1144,cannot:43,captur:1256,cast:[40,41,131,295,440,569,701,970,994,1010,1106,1108,1112],catch_except:[994,1018],categori:43,caus:43,ceil:[87,218,401,524,655,851,994,997],cell:[1225,1235,1273,1282],certain:[40,41,994,997,1047],chain:[40,41,1140,1141,1142,1295,1296],chang:[43,920,994,1061,1144,1188,1190,1197,1256,1298],channel:[994,1027,1106,1108,1109,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283],check:[15,16,17,18,19,40,41,43,920,959,969,970,975,984,993,994,1004,1023,1036,1044,1076,1086,1090,1096,1144,1188,1189,1196,1256,1299],check_nest:[1188,1196],check_shap:[40,41],check_submod_ret:[1285,1286],check_typ:[40,41],choic:[1256,1299],choleski:[778,1113],choos:[994,1087,1113,1118,1124,1129,1256],choose_random_framework:59,chosen:[40,41,994,997,1087],chunk:[920,962,963,964,1144],chunk_siz:[920,964,1144],circl:[1124,1125,1127],clark:1256,clear:[43,920,936,1144],clear_framework_stack:59,clear_mem_on_dev:[438,693,920],click:1256,clip:[40,41,295,440,701,994,1008,1009,1050,1052,1256],clip_matrix_norm:994,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,994],clipped_delta:1144,clone:[40,41,920,939,940,941,942,1144],clone_arrai:1144,clone_it:1144,clone_nest:1144,clonedit:1144,cloneditem:1144,clonednest:1144,close:[43,842,843,1106,1111,1124,1127,1144,1302],closest:[970,975],closest_valid_dtyp:970,code:[40,41,42,43,489,1256,1257,1298,1299],codebas:[920,962,963,1144,1256,1299,1302],codomain:[851,852,863],colab:1256,collect:[15,40,41,438,440,473,478,482,486,487,489,879,918,920,970,994,1090,1106,1113,1121,1124,1144,1188,1200,1207,1217,1225,1238,1242,1259,1273,1287,1289],color:[40,41,42,1300,1301],column:[994,1037],combin:[40,41,42,1106,1111,1256,1302],combined_batch_s:1144,come:1299,command:1256,comment:43,commit:1302,common:[40,41,43,1124,1129],common_key_chain:[40,41],commun:[43,1256,1299],communuti:43,compar:[40,41,994,996,1002,1003],comparison_oper:[0,9,10],compat:[43,851,853,865,867,875,876,877,879,898,904,994,1022,1061,1124,1132,1256,1302],compil:[295,440,701,1245,1246,1250,1256,1285,1286,1289,1290,1291,1292,1293,1294],compile_graph:[1244,1256,1285,1286,1289,1293],compile_on_next_step:[1285,1286,1289,1290,1291,1292,1293,1294],complet:[40,41,43,1113,1118,1144],complex:[1299,1302],compon:[994,1014],composit:43,comput:[40,41,851,853,855,859,862,865,867,879,898,920,964,994,1008,1009,1015,1016,1022,1049,1090,1092,1093,1094,1095,1097,1098,1099,1101,1103,1106,1109,1113,1114,1115,1116,1117,1118,1121,1122,1123,1124,1125,1127,1128,1129,1133,1134,1135,1136,1138,1188,1192,1207,1208,1209,1210,1211,1212,1213,1214,1215,1225,1226,1227,1228,1229,1230,1231,1232,1234,1236,1238,1239,1240,1241],concat:[40,41,920,949,950,951,952,964,994,1027,1144],concaten:[40,41,131,295,440,569,701,994,1027,1144,1256],concatten:[40,41,920,949,950,951,952,964,1144],condit:[440,918,919,994,1087,1188,1196],conditon:[1188,1196],config:[40,41,1144],config_list:1144,configur:[40,41],conflict:43,conform:43,conjunct:1299,connect:[1250,1273,1283,1284],consid:[40,41,1113,1118,1298,1302],consist:[40,41,842,843,920,952,1144,1207,1208,1285,1286,1299],constant:[920,929,930,994,1011,1144,1188,1192,1238,1239,1240,1241,1242,1243,1264,1265,1269,1272,1285,1286,1287,1288,1299],constant_kwarg:1144,constant_pad:[295,440,569,701,994],constitu:[40,41],construct:[994,1078,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298],constructor:[40,41,42,994,998,1295,1296],consum:[920,1144],cont_feat_dim:[1225,1236],contaienr:[40,41],contain:[15,18,19,42,43,842,843,844,845,846,851,852,853,857,859,860,861,863,865,867,872,873,875,876,877,879,898,904,920,939,943,964,970,974,994,995,999,1000,1007,1008,1009,1012,1022,1036,1050,1052,1062,1073,1074,1090,1092,1093,1095,1097,1098,1099,1124,1132,1140,1141,1142,1143,1144,1200,1201,1207,1209,1210,1211,1213,1215,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[440,701,994],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[440,994,1053,1225,1236,1273,1284],context_dim:[1273,1284],contextmanag:[59,60],continu:[43,1144,1299],contract:[40,41,1207,1208],contribut:[1256,1257],contributor:[43,1256],control:1256,conv1d:[197,380,503,831,1225,1256,1273],conv1d_transpos:[197,380,503,831,1225],conv1dtranspos:[1256,1273],conv2d:[197,380,503,638,831,1225,1256,1273],conv2d_transpos:[197,380,503,831,1225],conv2dtranspos:[1256,1273],conv3d:[197,380,503,638,831,1225,1256,1273],conv3d_transpos:[197,380,503,831,1225],conv3dtranspos:[1256,1273],convent:[40,41,1207,1208],conver:[920,936,947,959,966,969,1144],convers:[16,17,18,19,40,41,1144,1256],convert:[15,16,17,18,19,40,41,43,920,947,948,970,976,982,983,994,1070,1081,1082,1106,1108,1112,1113,1120,1144,1188,1190,1197,1256,1263],convert_dtyp:970,convolut:[1225,1226,1227,1228,1229,1230,1231,1232,1273,1274,1275,1276,1277,1278,1279,1280],cool:43,cooler:43,coordin:[994,1051,1124,1125,1127,1129],copi:[40,41,43,489,994,1013,1144,1188,1190],copy_arrai:[440,701,994],copy_nest:1188,core:[438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,487,488,489,490,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,922,923,924,925,926,927,929,930,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1256],corner:43,correct:[43,1256,1299],correctli:[40,41,43,1113,1116,1124,1129,1207,1209,1210,1211,1212,1213,1214,1215],correspond:[40,41,43,879,904,994,1010,1200,1201],cos:[87,401,524,655,851,994,1027,1124,1125,1138,1299],cosh:[87,401,524,655,789,851,1124],cosin:[851,855,856,1124,1125,1126,1131],cost:[1090,1092,1093,1095,1097,1098,1099,1140,1141,1142,1143],cost_fn:[1140,1143],could:1302,count:[40,41,868,869,875,876,877,1144,1207,1212,1214,1254],cours:43,cprint:1300,cpu:[40,41,43,920,957,959,965,966,969,994,997,1001,1029,1030,1037,1047,1055,1056,1057,1063,1064,1089,1144,1200,1201,1202,1203,1204,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1295,1296,1298,1299],creat:[40,41,842,843,844,846,920,929,930,994,997,1001,1028,1029,1030,1037,1047,1055,1056,1057,1063,1064,1080,1089,1090,1103,1144,1200,1201,1202,1203,1204,1256,1257,1262,1263,1264,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298,1302],create_if_abs:[40,41],create_vari:1264,creation:[40,41,42,43],creation_funct:[391,392,393,394,395,842,843,844,845,846],crop:[1106,1110],crop_siz:[1106,1110],cross:[295,701,994,1238,1239,1240,1241],cross_entropi:1238,cuda:[40,41,920,929,948,965,994,997,1001,1029,1030,1037,1047,1055,1056,1057,1063,1064,1089,1144,1200,1201,1202,1203,1204,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1295,1296],cumprod:[131,295,440,701,994],cumsum:[701,994],cumul:[994,1015,1016],current:[40,41,42,43,920,929,953,954,956,960,970,976,984,993,994,1017,1031,1039,1043,1054,1058,1144,1188,1189,1196,1256,1302],current_framework:59,current_framework_str:[440,701,994,1144],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1250,d_in:[1225,1226,1227,1228,1229,1230,1231],d_out:[1225,1226,1227,1228,1229,1230,1231],da_can_termin:1144,da_dim_s:[920,1144],da_direct:1144,da_tune_step:[920,1144],dai:1302,daniel:1256,data:[40,41,42,43,842,843,844,845,846,848,849,851,852,853,857,859,863,865,867,868,869,875,876,877,879,898,904,920,922,923,924,925,926,927,932,933,934,948,970,974,975,976,980,981,982,983,984,985,986,993,994,997,1001,1022,1028,1037,1044,1056,1057,1061,1072,1076,1089,1090,1096,1104,1124,1132,1144,1225,1234,1256],data_format:[1225,1226,1227,1228,1229,1230,1231,1232,1273,1274,1275,1276,1277,1278,1279,1280],data_type_funct:[396,398,399,847,848,849],dataset:[40,41],datatyp:[40,41,970,975,985,986],dcdw:[1090,1092,1093,1095,1097,1098],debug_info:1250,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1090,1097,1098,1289,1291,1292],decay_lambda:[1090,1097,1098,1289,1291,1292],decid:[40,41,1302],decompos:[1113,1114,1118],decomposit:[1113,1114,1118,1119],decor:43,decrement:[994,1040],dedic:[1090,1104,1262,1263],deep:[40,41,1256],deep_copi:[40,41],deeper:[920,942,946,952,1144,1188,1197,1256],deepli:[1188,1190],def:[43,60,83,214,397,520,651,921,928,931,971,972,973,1091,1144,1148,1155,1251,1255,1256,1265,1268,1271,1298,1299,1302],default_dev:43,default_devic:920,default_dtyp:[43,970],default_float_dtyp:970,default_int_dtyp:970,default_key_color:[40,41,42],default_nod:1144,default_rng:489,default_v:[994,1018],defaultdevic:[920,921],defaultdtyp:[970,971],defaultfloatdtyp:[970,972],defaultintdtyp:[970,973],defer:43,defin:[43,994,1014,1055,1057,1089,1200,1202],definit:43,degre:[851,855,1124,1136,1138],del:1144,delai:43,delet:43,delta:[1090,1092,1144,1250],delta_dim_s:1144,delta_percent_mem:1144,delta_sf:1144,delta_util:1144,demo:1256,denomin:[994,1026,1033,1066,1073,1074,1242,1243,1287,1288],denot:43,dens:[1273,1283],depend:[43,851,852,860,861,879,904,994,1087,1113,1119,1256],depth:[40,41,440,464,920,942,946,952,994,1035,1055,1144,1188,1197,1250,1254,1285,1286],depth_cutoff:[40,41],depthwis:[1225,1232,1273,1280],depthwise_conv2d:[197,380,503,638,831,1225],depthwiseconv2d:[1256,1273],deriv:[1090,1092,1093,1095,1097,1098,1099,1188,1190,1197,1256,1285,1289,1293,1295],descend:[872,873,1113,1119],descent:[1090,1095,1289,1294],describ:[40,41,1207,1208],descript:[865,867],design:[1256,1257],desir:[40,41,920,965,970,974,994,997,1001,1037,1038,1056,1057,1089,1106,1111,1144,1207,1209,1210,1211,1213,1215],desired_aspect_ratio:[478,481,1106,1111],desired_percent_increas:1144,detail:1302,detect:[40,41,1188,1189,1196],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,851,852,853,857,863,865,867,875,876,877,879,904,920,955,957,958,967,970,974,975,981,984,985,986,993,994,996,997,1001,1002,1003,1036,1039,1043,1044,1076,1086,1090,1096,1124,1132,1140,1141,1142,1143,1144,1225,1236],dev:[40,41,42,43,124,289,438,440,441,444,454,455,456,463,464,465,466,467,472,489,490,562,693,920,923,924,926,927,929,930,933,934,936,937,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,956,959,960,961,962,963,964,965,966,969,994,997,1001,1029,1030,1037,1047,1055,1056,1057,1063,1064,1089,1090,1105,1200,1201,1202,1203,1204,1262,1263,1264,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1295,1296],dev_clon:[40,41,920],dev_clone_arrai:920,dev_clone_it:920,dev_clone_nest:920,dev_dist:[40,41,920],dev_dist_arrai:920,dev_dist_it:920,dev_dist_nest:920,dev_from_str:[43,124,289,438,562,693,920],dev_mapp:920,dev_str:[40,41],dev_to_str:[124,289,438,562,693,920],dev_unifi:920,dev_unify_arrai:920,dev_unify_it:920,dev_unify_nest:920,dev_util:920,devclonedit:920,devcloneditem:920,devclonednest:920,devdistit:920,devdistitem:920,devdistnest:920,develop:[43,1256,1299,1302],deviat:[40,41,1200,1203,1207,1213,1242,1243,1287,1288],devic:[21,40,41,43,391,392,393,395,439,440,453,842,843,844,845,846,922,923,924,925,926,927,929,930,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,994,997,1001,1028,1029,1030,1037,1047,1055,1056,1057,1063,1064,1089,1090,1105,1200,1201,1202,1203,1204,1256,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1295,1296],devmanag:[920,928],devmapp:[920,930],devmappermultiproc:920,diag:[1113,1119],diagon:[101,227,415,538,669,842,845,865,994,1037],dict:[15,16,17,18,19,40,41,42,920,922,925,929,930,932,942,943,944,945,946,994,1019,1020,1021,1048,1140,1141,1142,1144,1188,1190,1191,1192,1195,1197,1262,1263],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,847,848,920,939,940,943,944,1113,1118,1144,1225,1234,1256,1299,1302],differenti:[1256,1299],dilat:[1225,1226,1227,1228,1229,1230,1231,1232,1273,1274,1275,1276,1277,1278,1279,1280],dim:[40,41,43,994,1055,1106,1107,1111,1113,1119,1144,1273,1284],dim_siz:[40,41,920,1144],dimens:[40,41,42,842,845,865,866,867,868,869,875,876,877,920,951,994,1005,1010,1014,1019,1020,1021,1024,1027,1034,1046,1055,1060,1061,1071,1072,1075,1083,1085,1106,1110,1113,1116,1119,1140,1141,1142,1143,1144,1200,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1222,1225,1226,1227,1228,1229,1230,1231,1232,1235,1238,1240,1241,1273,1274,1275,1276,1277,1278,1279,1280,1283,1284],dimension:[40,41,489,842,843,865,867,875,876,877,994,1071,1072,1113,1119],direct:1144,directli:[43,1188,1197,1299,1302],directori:[994,1068,1079],discord:43,discret:[1238,1240],discuss:43,disk:[40,41,1106,1108],distanc:[994,997],distribut:[40,41,920,939,943,944,945,946,1144,1200,1201,1202,1203,1204,1225,1233,1273,1281,1285,1286],distribute_nest:1144,distributedarrai:[40,41],distrubt:[1238,1240],dive:[1256,1299],divid:[40,41,994,1071,1073,1124],dividend:[1124,1132],divis:[994,1026,1033,1066,1073,1074,1090,1092,1093,1097,1124,1132,1289,1290,1291],divisor:[1090,1092,1093,1097,1124,1132,1289,1290,1291],doc:1256,docstr:43,doe:[40,41,43,994,997,1071,1298],doesn:[1113,1118,1256],doing:43,domain:[851,852,863,1124,1125],don:[43,1256],done:43,door:1302,dot:[1113,1115,1225,1236,1237,1273,1284],down:1298,downscal:[994,1008,1009],drag:[1256,1302],draw:[1200,1201,1203,1204],drawn:[1200,1201,1202,1203,1204],drop:[1256,1302],dropout:[1225,1256,1273,1284],dropout_r:[1273,1284],ds_tune_step:920,dtype:[40,41,43,131,295,391,392,393,395,396,398,399,440,441,444,445,453,456,465,472,569,701,842,843,844,846,847,848,849,974,975,976,977,978,979,981,982,983,984,985,986,987,988,989,990,991,992,993,994,997,1001,1028,1037,1055,1056,1057,1089],dtype_bit:[131,295,440,569,701,970],dtype_from_str:[43,131,295,440,569,701,970],dtype_in:[440,450,451,452,970,976,981,982,983,984,985,986,993],dtype_to_str:[131,295,440,569,701,970],duplic:[40,41],dure:[40,41,43,918,919,994,1084,1090,1092,1093,1097,1140,1141,1142,1143,1285,1286,1289,1290,1291,1293],dynam:[440,446,918,919],each:[40,41,42,43,851,852,853,857,859,860,861,863,872,873,879,898,904,920,929,930,939,940,941,942,943,944,945,951,963,964,994,995,996,1011,1022,1060,1071,1075,1078,1088,1090,1093,1095,1097,1098,1099,1106,1109,1113,1119,1124,1127,1132,1134,1135,1144,1188,1192,1200,1201,1207,1208,1225,1226,1227,1228,1229,1230,1231,1232,1233,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1299],eager:1299,easi:1302,easili:1256,econom:1302,ecosystem:1256,edg:[994,1007,1011,1088],effect:[1090,1099],effective_grad:[1090,1099],effici:1302,einop:[40,41,994,1019,1020,1021],einops_rearrang:[40,41,994],einops_reduc:[40,41,994],einops_repeat:[40,41,994],einstein:[40,41,1207,1208],einsum:[40,41,183,368,491,628,811,1207],either:[40,41,43,994,1018,1048,1051,1053,1140,1141,1142,1143,1144,1273,1284,1285,1286,1299],eleg:1144,element:[40,41,43,489,842,845,851,852,853,854,855,856,857,859,860,861,862,863,868,869,872,873,875,876,877,879,898,904,920,941,945,951,970,974,994,995,997,999,1000,1002,1003,1007,1008,1009,1015,1016,1022,1025,1026,1037,1038,1050,1052,1060,1062,1071,1082,1087,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1144,1207,1208,1210,1212,1214,1217,1218,1219,1220,1221,1222,1223,1224,1225,1233,1273,1281],elementwis:[40,41],elementwise_affin:[1287,1288],elementwise_funct:[851,852,853,854,855,856,857,858,859,860,861,862,863],elemtn:[1200,1201],elif:1144,els:[994,1004,1018,1023,1144],elsewher:[994,1087],emphas:1256,empti:[40,41,1113,1118,1144],enabl:[40,41,42,43,1256],encapsul:[847,849],encod:[994,1027,1106,1108],end:[842,843,994,997,1256,1299],endpoint:[391,392,842,843],engag:43,ensur:43,entir:[40,41,875,876,877,920,964,1144,1256,1273,1282],entri:[40,41,994,1047,1071,1072],entropi:[1238,1239,1240,1241],enumer:1144,environ:1256,eps:[396,847,848],epsilon:[1090,1092,1093,1097,1238,1239,1240,1241,1242,1243,1287,1288,1289,1290,1291],equal:[40,41,440,569,701,851,855,857,994,996,1002,1003,1011,1071,1088,1124,1136,1138,1200,1204],equality_matrix:[994,996],equat:[40,41,1207,1208],equival:[865,867,994,997,1124,1138],erf:[487,789,1124],error:[40,41,43,920,994,1072,1124,1133,1144,1217,1218,1285,1286,1289,1293],essenti:43,etc:[40,41,43,920,965,994,997,1001,1029,1030,1037,1047,1055,1056,1057,1063,1064,1089,1144,1200,1201,1202,1203,1204,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1295,1296,1302],euclidean:[865,867],euler:841,evalu:[40,41,851,860,861,875,876,877,994,1051,1188,1189,1196],even:[43,1302],evenli:[40,41,842,843,994,997,1047,1071],everi:[43,994,996,1302],exact:[40,41],exampl:[43,918,919,994,1007,1075,1113,1118,1256,1298,1299,1302],example_input:[440,446,918,919],exc_tb:1144,exc_typ:1144,exc_val:1144,exce:[994,1052],except:[40,41,44,47,842,843,875,876,877,994,997,1004,1010,1018,1084,1144],excess_s:1144,excit:[1256,1299],exclud:[59,61,842,843,994,997,1200,1204],exclus:[40,41,440,448,461,473,475,994,1015,1044,1090,1096,1200,1202],execut:[43,994,1084,1299],execute_with_gradi:[163,344,473,607,768,1090,1256,1298],exist:[40,41,994,1018,1144,1256,1289,1293,1302],exp:[789,1124],expand:[40,41,994,1024,1027],expand_dim:[40,41,295,701,994,1144],expect:[994,998],explain:[43,1299],explicitli:[43,1273,1282,1284,1285,1286,1299],expon:[43,879,904,994,1074],exponenti:[43,879,904,1124,1133,1134],expos:[994,1001,1012],express:[994,1051],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1090,1094],extract:[865,866],eye:[1113,1115],fabian:1256,fabio:1256,factor:[920,929,962,963,964,1090,1092,1093,1097,1098,1113,1119,1144,1225,1226,1227,1228,1229,1230,1231,1232,1273,1274,1275,1276,1277,1278,1279,1280,1289,1290,1291,1292],fail:43,falck:1256,fall:[1285,1286,1289,1293],fallback_to_non_compil:[1285,1286,1289,1293],fals:[15,18,19,40,41,42,59,66,67,68,69,70,438,440,448,449,461,468,471,473,474,475,482,483,842,843,851,857,865,867,872,873,875,876,877,920,938,951,959,964,969,970,977,978,979,980,994,996,1015,1018,1023,1027,1034,1044,1048,1069,1071,1085,1087,1090,1093,1094,1095,1096,1097,1098,1099,1113,1116,1140,1141,1142,1143,1144,1188,1189,1190,1192,1196,1197,1207,1209,1210,1211,1212,1213,1214,1215,1244,1245,1246,1250,1254,1262,1263,1285,1286,1289,1290,1291,1292,1293,1294],fan_in:1264,fan_mod:1264,fan_out:1264,far:[1188,1189,1196,1298],faster:[918,919],favourit:[1256,1298],feasibl:1302,feat_dim:[1225,1236,1237],fed:[920,964,1144],feed:[920,964,1144],few:43,field:1302,file:[40,41,43,994,1068,1079,1285,1286],filepath:[40,41],fill:[40,41,842,844,846,994,1028,1056,1200,1202],fill_valu:[440,453,994,1028],filter:[1225,1226,1227,1228,1229,1230,1231,1232,1273,1274,1275,1276,1277,1278,1279,1280,1302],filter_s:[1273,1274,1275],filter_shap:[1273,1276,1277,1278,1279,1280],find:[40,41,43,1302],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[82,83,213,214,396,397,519,520,650,651,847],finish:[1256,1302],finit:[851,857],first:[40,41,43,489,851,853,918,919,920,951,994,1002,1010,1014,1022,1047,1075,1077,1090,1094,1113,1119,1140,1141,1142,1143,1144,1188,1189,1196,1200,1206,1207,1212,1214,1273,1284,1285,1286,1289,1293,1299,1302],firstlayersiren:[1256,1264],firstli:[1299,1302],fist:[920,964,1144],fit:[40,41,438,440,473,478,482,486,487,489,994,1060,1106,1111],fix:43,fkt:1302,flag:[40,41,43,1090,1096],flat:[40,41,43,994,1060,1063],flat_list:[40,41],flatten:[40,41,865,867,994,1027,1060,1207,1209,1210,1211,1213,1215],flatten_key_chain:[40,41,1285,1286],flexibl:[1256,1299],flip:[40,41,104,230,418,541,672,868],float32:[43,440,456,970,974,982,983,994,997,1001,1037,1056,1057,1089],float_dtyp:[970,978,988],float_img_to_uint8_img:1106,floor:[295,440,701,994,1026,1144],floormod:[295,440,701,994],fluid:1302,fname:[1244,1246,1250,1285,1286],folder:[43,1256],follow:[40,41,43,847,849,865,867,920,964,994,1040,1041,1042,1073,1074,1090,1093,1095,1097,1098,1099,1144,1188,1192,1197,1225,1236,1237,1256,1273,1283,1289,1293],followng:[847,848],fomaml_step:1140,forget:[1090,1092,1093,1097,1289,1290,1291],fork:[994,1053,1256,1257],forkserv:[994,1053,1144],form:[15,16,17,18,19,40,41,842,845,994,1001,1090,1093,1095,1097,1098,1099,1188,1190,1197,1225],format:[40,41,43,920,938,970,974,976,980,994,997,1001,1037,1056,1057,1089,1144,1207,1208,1256,1298,1299],format_fn:[40,41],format_key_chain:[40,41],forward:[1285,1286,1289,1293,1298],found:[40,41,42],fourier:[994,1027],fourier_encod:994,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,83,84,85,88,89,90,91,92,93,94,95,96,97,98,99,102,103,105,109,112,113,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,212,214,215,216,219,220,221,222,223,224,225,228,229,231,235,238,239,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,350,351,352,354,355,356,357,358,360,361,364,365,366,367,369,370,371,372,373,374,375,376,379,381,382,383,384,385,386,387,392,393,394,395,397,398,399,402,403,404,405,406,407,408,409,410,411,412,413,416,417,419,423,426,427,439,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,474,475,476,477,479,480,481,483,484,485,488,490,492,493,494,495,496,497,498,501,502,504,505,506,507,508,509,510,515,516,517,518,520,521,522,525,526,527,528,529,530,531,532,533,534,535,536,539,540,542,546,549,550,558,563,564,565,566,567,568,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,608,609,610,611,613,614,615,617,618,619,620,624,625,626,627,629,630,631,632,633,634,635,639,640,641,646,647,648,649,651,652,653,656,657,658,659,660,661,662,663,664,665,666,667,670,671,673,677,680,681,689,694,695,696,697,698,699,700,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,769,770,771,772,773,775,776,777,779,780,781,782,783,784,785,787,788,790,791,792,793,794,795,796,797,798,799,800,801,802,803,805,806,807,808,809,810,812,813,814,815,816,817,818,821,822,823,824,825,826,827,829,830,832,833,834,835,836,837,838,843,844,845,846,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,869,873,876,877,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1243,1245,1246,1248,1249,1251,1255,1256,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286,1288,1289,1290,1291,1292,1293,1294,1296,1297,1298,1299,1301,1302],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1144,framewrk:[994,1053],free:43,freed:43,freeli:43,frequenc:[994,1027],from:[40,41,42,43,842,843,851,859,863,865,866,868,869,875,876,877,920,929,930,964,970,976,994,1018,1029,1030,1037,1061,1072,1080,1087,1090,1093,1097,1106,1110,1113,1118,1140,1141,1142,1143,1144,1188,1190,1197,1200,1201,1202,1203,1204,1207,1212,1214,1225,1233,1236,1256,1262,1263,1273,1281,1284,1289,1293,1298,1299],from_cal:[1285,1286],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,131,295,440,569,701,847,848,994,1113,1118,1256],full_matric:[1113,1119],fulli:[43,1256,1273,1283,1284,1298],func:[40,41,440,446,473,474,918,919,920,964,994,1006,1090,1094,1144],further:[43,1302],furthermor:1302,futur:1302,gain:1264,gamma:[1242,1243],gather:[40,41,131,295,440,569,701,994,1030],gather_nd:[40,41,131,295,440,569,701,994],gauss:[1124,1133],gaussian:[1217,1218],geglu:[1256,1259],gelu:[378,500,820,1217,1256,1259],gener:[23,40,41,43,438,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,489,842,843,918,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1096,1200,1202,1204,1205,1256,1289,1293],geometr:[994,1027],get:[40,41,43,847,848,849,920,929,930,938,953,954,959,963,966,969,970,980,981,994,998,1031,1032,1033,1059,1144,1254,1256,1273,1282,1302],get_all_arrays_in_memori:994,get_all_arrays_on_dev:920,get_framework:59,get_initial_st:[1273,1282],get_min_bas:994,get_min_denomin:994,get_mod_kei:[1285,1286],get_num_dim:[440,701,994],get_param:1250,get_param_recurs:1250,get_referrers_recurs:994,getfullargspec:1144,gist:1256,give:[43,872,873,994,1061,1299],given:[40,41,43,842,844,846,868,869,872,873,920,953,959,962,963,964,966,969,970,974,994,997,1001,1007,1015,1016,1030,1047,1056,1057,1060,1063,1064,1071,1078,1083,1085,1089,1090,1092,1093,1095,1097,1098,1099,1113,1115,1120,1124,1125,1144,1188,1193,1194,1200,1203,1204,1206,1207,1210,1212,1213,1214,1215,1225,1226,1227,1228,1229,1230,1231,1232,1262,1263,1302],global:[40,41,42,920,929,930,937,962,963,964,970,977,978,979,994,1017,1032,1033,1059,1065,1066,1067,1073,1074,1090,1105,1144,1242,1243,1248,1249,1256,1287,1288],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1256,1264,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283],good:43,googl:1256,got:[43,1256],gpu0:43,gpu2:43,gpu:[920,955,958,1144],gpu_is_avail:[438,920,1144],grad:[1256,1289,1293,1298],gradient:[25,40,41,474,475,476,477,920,964,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1109,1140,1141,1142,1143,1256,1289,1290,1291,1292,1293,1294,1298,1302],gradient_descent_upd:[1090,1140,1141,1142,1143],gradient_imag:[166,349,478,612,774,1106],gradienttrack:[1090,1091],graph:[1090,1093,1095,1097,1098,1099,1244,1245,1246,1251,1256,1285,1286],graph_compil:[1244,1245,1246,1247,1248,1249,1250,1254],greater:[40,41,994,997,1025,1072,1200,1204],green:[40,41,42,1300,1301],grid:[994,1051],group:[1106,1111],guid:[43,1256,1257,1302],gym:1256,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1302,half:[842,843,994,997,1144,1200,1204],hand:1256,handl:[40,41,42,43,918,919,920,936,938,947,948,959,966,969,1090,1093,1095,1097,1098,1099,1144,1289,1290,1291,1292,1293,1294],happen:43,has:[40,41,43,994,1075,1113,1118,1124,1128],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,994],hasattr:1144,have:[40,41,43,842,845,847,848,851,852,853,857,859,863,865,867,868,869,875,876,877,879,898,904,994,1010,1014,1019,1020,1021,1022,1028,1075,1090,1096,1104,1113,1119,1124,1132,1144,1256,1298,1299],haven:43,hdf5:[40,41,1285,1286],head:[1225,1236,1273,1284],head_dim:[1273,1284],height:[1106,1111],height_cutoff:[40,41],help:[43,59,396,438,439,920,932,933,934,935,970,1090,1250,1254,1256,1264,1266,1267,1269,1270,1272],helper:1256,here:[43,1256],hidden:[1225,1235,1273,1282],hierarch:[994,1012],hierarchi:[40,41],high:[40,41,489,1200,1202,1204],higher:[1090,1093,1095,1097,1098,1099,1113,1119],highest:[1200,1202],highest_util:1144,highest_util_nod:1144,highli:1256,highlight:1302,highlight_subgraph:[1244,1246,1250],hint:43,hkt:1302,hold:[970,974,994,997,1001,1063,1064],host:1256,hot:[994,1055],hour:43,how:[1256,1273,1284,1285,1286,1299,1302],howev:[43,1299],http:1302,hyperbol:[851,852,856,1124,1126,1130,1131,1137,1139,1217,1224],hypothet:[43,1302],icon:1256,idea:1256,ident:[40,41,43,131,295,440,569,701,994],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[841,847,848,851,863],if_exist:[40,41],ignor:[40,41,1289,1293],ignore_key_error:[40,41],ignore_miss:[1289,1293],ignore_non:[40,41],iii:43,iinfo:[82,213,396,519,650,847],imag:[27,479,480,481,994,1046,1107,1108,1109,1110,1111,1112,1225,1226,1227,1228,1229,1231,1232,1256,1302],image_dim:[1106,1110],imkkhk:1302,immedi:[1256,1299,1302],implement:[43,851,852,860,861,879,904,1256,1299,1302],in_featur:[1225,1234],inadvert:43,includ:[40,41,43,842,843,865,867,875,876,877,994,997,1036,1073,1074,1086,1188,1189,1200,1204,1273,1283,1284,1287,1288,1298],include_deriv:[1188,1190,1197],include_empti:[40,41],include_gener:[1244,1245,1246,1250,1285,1286],include_inf:[40,41,994,1036,1086],include_nest:[1188,1189],include_self:[40,41],inclus:[43,1200,1202],incom:[1225,1234],increas:[920,942,946,952,994,1011,1024,1088,1144,1188,1197],increasingli:1302,increment:[994,1041,1144],increment_param_count:1250,inde:1256,indent:[40,41,42],independ:[1200,1201],index:[40,41,440,489,994,999,1000,1029,1030,1051,1072,1075,1188,1191,1193,1194,1195,1198],index_nest:1188,indic:[40,41,440,454,455,464,466,467,842,843,865,867,872,873,994,999,1000,1029,1030,1038,1055,1063,1064,1188,1189,1191,1193,1194,1195,1196,1198,1199,1200,1201,1217,1222,1225,1226,1227,1228,1229,1230,1231,1232,1242,1243,1273,1274,1275,1276,1277,1278,1279,1280,1285,1286],indices_wher:[131,295,440,701,994],indistinguish:[851,863],inevit:1302,inf:[40,41,865,867,994,1036,1045,1086,1124,1128],infer:[851,859,865,866,918,919,994,1034,1037,1061,1069,1106,1110,1113,1118,1299,1302],infin:[851,852,857,863,865,867,994,1045],infinit:[851,863],inform:[847,848,849,1090,1101],init_c:[1225,1235],init_h:[1225,1235],init_on_first_step:[1289,1293],initi:[40,41,42,43,59,396,438,439,920,932,933,934,935,970,1090,1144,1225,1235,1250,1254,1256,1266,1267,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1289,1293],initialz:[1285,1286],inner:[1140,1141,1142,1143],inner_batch_fn:[1140,1141,1142],inner_batch_shap:[1225,1234],inner_cost_fn:[1140,1141,1142],inner_grad_step:[1140,1141,1142,1143],inner_learning_r:[1140,1141,1142,1143],inner_optimization_step:[1140,1141,1142,1143],inner_v:[1140,1141,1142],innermost:[842,845],inp:1144,inplac:[40,41,994,1004,1039,1043,1076,1090,1093,1095,1097,1098,1099,1262,1263,1289,1290,1291,1292,1293,1294],inplace_arrays_support:[440,994],inplace_decr:[131,295,440,569,701,994],inplace_incr:[131,295,440,569,701,994],inplace_oper:[0,11,12],inplace_upd:[40,41,131,295,440,569,701,994,1262,1263],inplace_variables_support:[440,994],input:[15,18,19,40,41,42,43,842,845,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,872,873,875,876,877,918,919,920,929,930,937,938,939,942,943,946,952,964,965,970,974,975,977,978,979,980,981,985,986,994,995,996,999,1000,1002,1003,1004,1005,1007,1008,1009,1010,1011,1013,1015,1016,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1034,1036,1037,1038,1040,1041,1042,1044,1045,1046,1049,1050,1051,1052,1060,1062,1069,1070,1072,1075,1076,1077,1078,1080,1081,1082,1083,1085,1086,1088,1090,1094,1096,1101,1105,1106,1107,1108,1109,1110,1112,1113,1116,1118,1119,1121,1122,1123,1124,1126,1128,1130,1131,1132,1136,1137,1138,1139,1140,1141,1142,1143,1144,1200,1201,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1242,1243,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1287,1288,1299],input_ax:[920,964,1144],input_channel:[1273,1274,1275,1276,1277,1278,1279,1282,1283],input_queu:1144,inputs_split:1144,insert:[994,1024],insid:43,inspect:1144,inspir:1302,instal:1256,instanc:[15,16,17,18,19,40,41,43,489,879,898,904,920,929,1144,1262,1263,1295,1296],instead:[40,41,43,489,1207,1209,1210,1211,1212,1213,1214,1215,1302],int32:43,int64:[970,974,994,997,1001,1037,1056,1057,1089],int_dtyp:[970,979,989],integ:[40,41,489,842,843,847,849,851,853,854,865,867,875,876,877,970,986,994,997,1025,1062,1071,1200,1202,1205],integr:1256,intend:43,inter:1256,interact:1256,interchang:[40,41,994,1077],interest:1256,interfac:[994,1001,1299],intermedi:[40,41],intern:[40,41,920,1090,1104,1144,1188,1189,1196,1197,1264,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1295,1296],interpol:[994,1046],intersect:[1124,1125],interv:[40,41,842,843,875,876,877,994,997,1007,1047,1124,1127,1200,1204],introduc:1302,inv:[778,1113,1302],invalid:[875,876,877],invalid_dtyp:970,invers:[851,852,1113,1115,1117,1124,1125,1126,1127,1128,1130,1302],invert:[1113,1115,1117],invest:1302,investig:43,invoc:[918,919],irrespect:1256,is_al:1144,is_arrai:[131,295,440,569,701,994,1144],is_float_dtyp:970,is_int_dtyp:970,is_mean:1144,is_sum:1144,is_var:[1250,1254],is_vari:[163,344,473,607,768,1090],isfinit:[87,218,401,524,655,851],isinf:[295,569,701,994],isinst:1144,isnan:[87,218,401,524,655,851],isnumer:1144,issu:[1256,1257],issue_numb:43,item:[15,19,40,41,879,891,892,920,929,930,932,939,941,943,945,951,970,977,994,1012,1035,1073,1074,1144,1188,1192,1193,1194,1197,1198,1199,1256,1285,1286,1298],iter:[15,16,17,18,19,40,41,42,918,919,920,923,924,926,927,929,930,933,934,941,943,944,945,946,951,964,994,996,1005,1010,1011,1037,1051,1056,1060,1061,1064,1069,1071,1075,1078,1083,1088,1144,1188,1189,1190,1192,1196,1197],iterbal:[920,941,945,951,1144],its:[489,872,873,920,964,994,1037,1061,1077,1083,1144,1256],itself:[43,1188,1197],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,391,392,393,394,395,396,398,399,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,841,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,872,873,875,876,877,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,922,923,924,925,926,927,929,930,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1254,1256,1257,1259,1260,1261,1262,1263,1264,1266,1267,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1300,1301],ivy_backend:[40,41],ivy_bay:1302,ivy_test:43,ivyfcmodel:1298,ivyh:[40,41,42],ivymodul:[194,828],jame:1256,jax:[43,1090,1096,1256,1302],jax_concat:1256,jnp:1256,join:[40,41,994,1010,1075,1144],journal:1256,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1256,1273,1282,1302],kaimingnorm:[1264,1268],kalman:1302,kalman_filt:1302,kalman_filter_step:1302,kalman_filter_upd:1302,keep:[40,41,920,965,994,1085,1144,1256,1257,1302],keep_inner_v:[1140,1141,1142],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1140,1141,1142],keepdim:[40,41,440,471,482,483,865,867,875,876,877,994,1085,1113,1116,1207,1209,1210,1211,1212,1213,1214,1215],kei:[15,16,17,40,41,42,43,879,884,920,932,994,1012,1140,1141,1142,1144,1188,1191,1195,1225,1236,1237,1256,1262,1263,1273,1284,1289,1293],kept:[40,41,42,1140,1141,1142],kera:1302,kernel:[1225,1235],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,920,929,930,942,946,952,994,998,1019,1020,1021,1048,1144,1188,1192,1285,1286],keyword_color_dict:[40,41,42],kind:[847,848,849,1302],kwarg:[15,16,17,40,41,42,59,63,920,929,942,946,952,994,1048,1144,1244,1245,1246,1250,1262,1263,1285,1286],kwarg_stateful_idx:[1244,1245,1246,1250,1285,1286],kwargs_clon:1144,kwargs_dist:1144,kwargs_uni:1144,label:[43,1238,1239,1240,1241],lamb:[1090,1097,1256,1289],lamb_upd:1090,lambda:[1144,1289,1292,1294,1298],lar:[1090,1097,1098,1256,1289],larger:[847,848,994,1007],largest:[40,41,847,848,849,994,999,1025],lars_upd:1090,last:[40,41,868,869,875,876,877,994,997,1014,1046,1071,1075,1113,1116,1119,1207,1212,1214,1217,1222,1225,1235,1273,1283],later:[40,41,994,1006],latest:[1273,1282],layer:[1090,1093,1095,1097,1099,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1242,1243,1256,1264,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1295,1296,1302],layer_norm:1242,layernorm:[1256,1287],layerwis:[1090,1098,1289,1292],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1188,1189,1196],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1217,1218,1219],leaky_relu:[820,1217],learn:[851,859,865,866,1090,1093,1095,1097,1098,1099,1113,1118,1140,1141,1142,1143,1200,1206,1256,1289,1290,1291,1292,1293,1294,1299,1302],learnabl:[1242,1243,1287,1288],least:43,leav:[15,18,19,40,41,1188,1189,1190,1196,1197],left:[40,41,43,1113,1116,1207,1209,1210,1211,1212,1213,1214,1215,1256],leftmost:[40,41],len:1144,length:[40,41,42,994,997,1061,1072,1083],lenton2021ivi:1256,lenton:1256,less:[40,41,43,87,218,401,524,655,851,854,865,867,1144,1200,1204],less_util_node_str:1144,let:[1299,1302],level:1256,librari:[1256,1298,1302],lightweight:1256,like:[43,1090,1096,1200,1204,1256,1298,1299,1302],likewis:43,limit:[40,41,42,43,847,848,849,994,1007,1008,1009],linalg:[29,1114,1115,1116,1117,1118,1119,1120,1256],line:43,linear0:[1256,1298],linear1:1256,linear2:1298,linear:[994,1027,1046,1113,1217,1218,1219,1220,1225,1233,1256,1273,1274,1275,1276,1277,1278,1279,1280,1298],linear_algebra:[482,483,484,485,865,866,867],linear_resampl:[131,295,440,569,701,994],linearli:[994,1027],link:[43,1256],linspac:[77,208,391,514,645,842,994,997],linspace_non_standard:[295,569,701],list:[15,18,19,40,41,391,393,395,842,844,846,868,869,875,876,877,920,929,930,939,940,942,943,944,946,949,950,964,994,997,1001,1003,1051,1070,1071,1080,1085,1140,1141,1142,1144,1188,1189,1190,1192,1196,1197,1225,1226,1227,1228,1229,1230,1231,1232,1256,1257,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280],list_join:[40,41,42],list_stack:[40,41],liter:[865,867],littl:1299,load:[40,41],loaded_kwarg:1144,loader:1256,local:43,local_set:[994,1035],locat:[43,851,858,994,1045,1200,1201],log1p:[87,401,524,655,851],log2:[87,401,524,655,851],log:[789,851,860,994,1047,1124,1144,1238,1239,1240,1241,1256],log_all_op:1250,log_global_inference_abs_tim:[1247,1256],log_global_inference_rel_tim:[1247,1256],logarithm:[851,860,861,1124,1135],logic:[31,851,862,875,876,877,1122,1123,1256],logical_and:[359,786,1121],logical_not:[87,218,401,524,655,851],logical_or:[359,786,1121],logit:[1238,1241],logspac:[131,295,440,569,701,994],look:[43,1299,1302],loop:[1140,1141,1142,1143],loss:[1239,1240,1241,1256,1298],loss_fn:[1256,1298],lot:1299,low:[40,41,489,1200,1202,1204],lower:[40,41,43,842,845,994,1050,1200,1204],lower_depth:[1285,1286],lowest:[15,18,19,40,41,1188,1197,1200,1202],lstm:[1225,1235,1256,1273],lstm_updat:[43,1225],machin:[847,848,849,851,859,865,866,1113,1118,1200,1206,1256,1299,1302],made:43,mai:[994,997,1018,1022,1256,1299,1302],main:[842,845,994,1037,1256],mainli:1256,maintain:43,make:[43,489,920,1144,1256,1299],maml:[1140,1141,1142],maml_step:1140,manag:[920,1144],manhattan:[865,867],mani:[40,41,43,994,1071,1256],manipulation_funct:[868,869],manner:[15,18,19,40,41,43,1188,1197],manual:[1188,1189,1196,1302],map:[40,41,42,851,858,920,929,994,1045,1144,1188,1193,1194,1197,1273,1284,1298],map_cont:[40,41],map_nest_at_index:1188,map_nest_at_indic:1188,map_sequ:[40,41],mapper:[920,929,930,1144],mark:43,mask:[1225,1236,1237],master:43,match:[40,41,994,1048],match_kwarg:994,math:[33,488,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1144,1256],mathbb:[1113,1120],mathbf:[1113,1120],mathemat:[841,865,867],matmul:[43,295,440,569,701,994,1302],matplotlib:1299,matric:[842,845,1225,1234],matrix:[40,41,842,845,865,866,994,996,1008,1049,1113,1114,1115,1116,1117,1118,1120,1225,1234,1273,1283],matrix_norm:[40,41,170,353,482,616,778,1113],matter:1256,max:[40,41,396,847,848,849,994,1008,1009,1020,1050,1063,1064,1144,1207,1209,1289,1291],max_batch_s:[40,41],max_chunk_s:[920,964,1144],max_depth:[40,41,920,924,927,934,942,946,952,994,1035,1144,1188,1197],max_dev_dim_step_ratio:920,max_freq:[994,1027],max_length:[40,41],max_node_dim_step_ratio:1144,max_norm:[40,41,994,1008,1009],max_split_factor_step_s:[920,1144],max_trust_ratio:[1090,1097,1289,1291],maxim:[1256,1299,1302],maximis:1256,maximum:[40,41,42,701,920,942,946,952,964,994,999,1007,1008,1009,1027,1090,1097,1144,1188,1197,1207,1209],mayb:[15,18,19],mdi:1144,mean:[40,41,489,920,949,950,951,952,964,994,1020,1140,1141,1142,1143,1144,1188,1192,1200,1203,1207,1210,1213,1215,1264,1298,1302],measur:[1225,1236,1273,1284],mech:1256,mechan:[1256,1302],medic:1302,member:43,memori:[920,936,959,964,966,969,1144,1225,1235,1256],mention:43,merg:43,merge_with_upstream:43,meshgrid:[295,440,701,994],messag:[1300,1301],meta:[35,1141,1142,1143,1256],method:[40,41,42,43,489,994,1001,1012,1051,1063,1064,1090,1097,1098,1144,1188,1189,1196,1197,1256,1273,1284,1285,1286,1299],might:[994,1018,1302],min:[40,41,396,847,848,849,865,867,994,1020,1052,1063,1064,1073,1113,1118,1144,1207,1211],min_bas:[994,1074],min_denomin:[994,1073],min_dev_dim_s:920,min_node_dim_s:1144,min_sf_tune_step:[920,1144],min_unit_dev_tune_step:920,min_unit_node_tune_step:1144,mind:1256,mini:[1242,1243,1287,1288],minimum:[40,41,701,920,970,974,994,997,1000,1001,1007,1032,1033,1065,1066,1073,1074,1144,1207,1211],miss:[1289,1293],ml_framework:[994,997,1113,1118],mod:[994,1026],mod_depth:[1285,1286],mod_height:[1285,1286],mod_with_top_mod_key_chain:[1285,1286],mode:[40,41,482,484,918,919,920,949,950,951,952,964,1113,1118,1119,1144,1299],model:[1256,1298],modul:[40,41,42,59,994,1053,1144,1256,1257,1259,1260,1261,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1287,1288,1295,1296,1302],moment:[1090,1092,1093,1097,1289,1290,1291],more:[43,868,869,994,1075,1144,1256,1299,1302],more_util_node_str:1144,most:[40,41,43,1113,1118,1256,1302],move:[40,41,43,920,965,1144],much:[43,1256,1302],multi:[489,994,1053,1225,1236,1273,1284],multi_head_attent:1225,multi_index_nest:1188,multi_map:[40,41],multi_nod:1144,multidev:[920,931,932,933,952],multidevcontain:[40,41],multidevic:[920,929],multidevit:[920,923,926,929,930,934],multidevitem:[920,922,925],multidevnest:[920,924,927],multiheadattent:[1256,1273],multinod:[1144,1148],multinodecontain:1144,multinodeit:1144,multinodeitem:1144,multinodenest:1144,multinomi:[176,363,489,623,804,1200],multipl:[40,41,875,876,877,994,1048,1071,1113,1115,1207,1209,1210,1211,1212,1213,1215,1242,1243,1273,1283,1299],multipli:[40,41,994,1015,1207,1212],multiprocess:[40,41,42,440,701,920,929,994,1144],must:[40,41,42,43,842,843,844,845,846,851,852,853,857,859,863,865,867,868,869,875,876,877,879,898,904,920,949,950,951,952,964,994,997,1010,1012,1014,1022,1050,1052,1064,1075,1124,1129,1132,1144,1200,1205,1289,1293],mutabl:[1188,1190,1197],mutlidevic:[920,929],mutlinod:1144,mw_tm1:[1090,1093,1097],mx_concat:1256,mxn:[842,845],mxnet:[43,1256,1302],my_func:43,mymodel:1256,name:[43,918,919,1244,1245,1246,1250,1298],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1299],nan:[40,41,841,851,852,857,858,994,1036,1086],nativ:[15,17,18,19,40,41,43,920,936,938,947,948,959,966,969,970,975,982,983,1144,1256,1257,1262,1263],native_modul:[1262,1263],native_module_class:[1262,1263],nativearrai:[15,18,19,43,842,845,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,865,867,868,869,872,873,875,876,877,879,898,904,920,938,964,965,970,974,980,985,986,994,995,996,997,999,1000,1001,1002,1003,1005,1007,1008,1009,1010,1011,1013,1014,1015,1016,1019,1020,1021,1022,1024,1025,1026,1027,1029,1030,1034,1036,1037,1038,1045,1046,1047,1049,1050,1051,1052,1055,1056,1057,1060,1061,1062,1063,1064,1069,1071,1072,1075,1077,1078,1080,1081,1082,1083,1085,1086,1087,1088,1089,1144,1188,1190,1197],natur:[851,860,1124,1135,1302],ncdhw:[1225,1230,1231,1273,1278,1279],nchw:[1225,1228,1229,1232,1273,1276,1277,1280],ncw:[1225,1226,1227,1273,1274,1275],ndarrai:[43,391,392,393,394,395,396,398,399,489,994,1081],ndhwc:[1225,1230,1231,1273,1278,1279],nearest:[994,1062],need:[43,994,1008,1009,1225,1227,1229,1231,1256,1273,1275,1277,1279,1302],neg:[40,41,842,843,851,857,865,867,868,869,875,876,877,1207,1212,1214,1217,1219],negative_slop:1264,neither:1144,nest:[15,16,17,18,19,40,41,42,920,942,946,952,994,1001,1080,1140,1141,1142,1144,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1285,1286,1289,1290,1291,1292,1293,1294],nested_indices_wher:1188,nested_map:[1144,1188],network:[1225,1234,1256,1257,1259,1273,1285,1286,1302],neural:[1225,1256,1259,1273,1298],never:43,new_node_percent_mem:1144,new_node_util:1144,new_node_utils_kei:1144,new_std:[1242,1243,1287,1288],newli:[43,918,919,994,1005,1006],newlin:[40,41,42],newshap:[994,1005,1061],next:[847,848,1144,1285,1286,1289,1290,1291,1292,1293,1294],nhwc:[1225,1228,1229,1232,1273,1276,1277,1280],node:[40,41,1188,1189,1196],node_clon:1144,node_dist:1144,node_dist_arrai:1144,node_dist_it:1144,node_in:1144,node_mapp:1144,node_str:1144,node_to_str:1144,node_util:1144,nodedistit:1144,nodedistitem:1144,nodedistnest:1144,nodemanag:[1144,1155],nodemapp:1144,nodemappermultiproc:1144,noinspect:[43,921,971,972,973,1091,1144,1251],non:[40,41,842,843,865,867,875,876,877,918,919,970,984,1285,1286,1289,1293,1299],none:[40,41,42,43,59,61,64,391,392,393,395,438,440,441,444,446,453,454,455,456,463,464,465,466,467,468,469,470,472,482,483,489,490,842,843,844,846,847,848,849,851,859,865,866,867,868,869,875,876,877,918,919,920,929,930,936,937,962,963,964,965,970,977,978,979,994,997,1001,1017,1018,1023,1028,1029,1030,1035,1037,1039,1040,1041,1042,1043,1047,1053,1055,1056,1057,1060,1063,1064,1065,1066,1071,1072,1073,1074,1083,1084,1089,1090,1093,1095,1097,1098,1099,1105,1106,1110,1113,1116,1118,1140,1141,1142,1143,1144,1188,1189,1192,1196,1197,1200,1201,1202,1203,1204,1207,1209,1210,1211,1212,1213,1214,1215,1225,1227,1229,1231,1234,1235,1236,1237,1242,1243,1244,1245,1246,1250,1254,1262,1263,1264,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296],norm:[40,41,865,867,994,1008,1009,1113,1116,1243,1256,1288,1289,1291],normal:[1200,1203,1242,1243,1287,1288],normalized_idx:[1242,1243],normalized_shap:[1287,1288],notat:[40,41,1207,1208],note:[43,1113,1118],noth:[40,41,1299],notimplementederror:1144,now:[40,41,920,965,994,995,1144,1256,1273,1284,1285,1286,1298,1299,1302],np_concat:1256,np_finfo:396,ns_tune_step:1144,num:[391,392,440,463,842,843,994,1047],num_arrai:[40,41],num_arrays_in_memori:994,num_arrays_on_dev:920,num_band:[994,1027],num_channel:[1273,1280],num_chunk:1144,num_chunks_floor:1144,num_class:[1200,1201],num_cpu_cor:920,num_gpu:[124,438,920,1144],num_head:[1225,1236,1273,1284],num_kei:[1225,1236,1237],num_lay:[1273,1282],num_or_size_split:[40,41,440,468,994,1071],num_output:1144,num_queri:[1225,1236,1237],num_sampl:[440,462,489,490,994,1046,1106,1107,1200,1201],num_task:[1140,1141,1142,1143],number:[40,41,42,841,842,843,847,848,849,851,858,875,876,877,918,919,920,956,957,958,970,981,985,986,994,997,1007,1011,1024,1027,1034,1037,1046,1047,1050,1054,1060,1071,1078,1082,1086,1088,1113,1119,1140,1141,1142,1143,1144,1200,1201,1205,1207,1209,1210,1211,1213,1215,1225,1236,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1299,1302],numer:[43,851,857,879,898,904,994,1032,1033,1065,1066,1073,1074,1124,1132,1264],numhead:[1225,1236],numpi:[40,41,43,391,392,393,394,395,396,398,399,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,994,1081,1113,1118,1119,1207,1208,1256,1298,1299,1302],nwc:[1225,1226,1227,1273,1274,1275],obj:[40,41],object:[40,41,42,59,396,847,848,849,920,970,974,994,997,1001,1090,1188,1191,1193,1194,1195,1198,1199,1200,1206,1250,1254,1264,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1285,1286],object_in:[440,444,994,1001],observ:1144,obvious:43,occupi:[847,848,849,994,1063,1064],off:[994,997],offer:1256,offset:[865,866,1242,1243],often:1299,old:[40,41],on_init:[1273,1284,1285,1286],onc:[43,920,964,1144,1200,1201,1256],one:[40,41,43,842,843,865,867,868,869,920,949,950,951,952,964,970,976,994,1037,1048,1055,1063,1064,1072,1075,1113,1116,1144,1207,1208,1209,1210,1211,1212,1213,1214,1215,1256,1299,1302],one_hot:[131,440,569,701,994],onearrai:[994,1024],ones:[40,41,77,208,391,514,645,842,994,1037,1055,1057,1256],ones_lik:[131,295,440,569,701,994],ongo:43,onli:[40,41,43,489,868,869,920,1113,1118,1144,1188,1189,1190,1196,1289,1290,1291,1292,1293,1294,1298,1299],onlin:1256,onto:[920,949,950,965,1144,1188,1192,1197],oom:[920,1144],open:[842,843,994,997,1200,1204,1256,1302],opencv:1299,oper:[40,41,851,862,994,1004,1019,1020,1021,1047,1076,1090,1093,1095,1097,1098,1099,1121,1122,1123,1225,1226,1227,1228,1229,1230,1231,1232,1234,1256,1257],operand:[40,41,851,852,1207,1208],oppos:[994,1027],optim:[920,1090,1093,1095,1097,1098,1099,1140,1141,1142,1143,1144,1256,1290,1291,1292,1294,1298,1302],optimizer_upd:1090,option:[15,18,19,40,41,42,43,391,392,393,395,842,843,844,846,865,867,868,869,875,876,877,918,919,920,929,930,938,942,943,944,945,946,949,950,951,952,959,962,963,964,965,969,970,975,980,984,993,994,996,997,999,1000,1001,1008,1009,1010,1015,1017,1018,1027,1028,1029,1030,1034,1036,1037,1044,1046,1047,1048,1051,1053,1055,1056,1057,1060,1063,1064,1067,1069,1071,1072,1073,1074,1075,1083,1085,1086,1089,1090,1093,1095,1096,1097,1098,1099,1101,1106,1110,1113,1116,1118,1140,1141,1142,1143,1144,1188,1189,1190,1192,1196,1197,1200,1201,1207,1209,1210,1211,1212,1213,1214,1215,1217,1218,1222,1225,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1299],ord:[865,867,1113,1119],order:[40,41,42,43,865,867,868,869,872,873,1090,1093,1095,1097,1098,1099,1113,1116,1140,1141,1142,1295,1296],ordered_node_util_kei:1144,org:1302,organ:43,origin:[40,41,42,994,1057,1061,1089,1113,1116],other:[40,41,43,879,881,882,887,889,890,894,896,897,898,899,900,902,904,905,906,907,908,909,911,912,913,915,916,917,918,919,994,996,997,1037,1090,1094,1200,1204,1256,1298,1299,1302],other_i:[43,879,898,904],otherwis:[15,16,17,18,19,40,41,842,843,851,857,865,867,875,876,877,920,937,970,977,978,979,994,1004,1083,1084,1087,1090,1096,1101,1105,1140,1141,1142,1144,1207,1209,1210,1211,1213,1215],our:[43,1256,1302],out:[43,489,879,898,994,997,1124,1128,1225,1233,1235,1256,1273,1281],out_feat_dim:[1225,1236],out_featur:[1225,1233,1234],out_i:[851,857],outdat:1302,outer:[1140,1141,1142,1143],outer_batch_fn:[1140,1141,1142],outer_batch_shap:[1225,1234],outer_cost_fn:[1140,1141,1142],outer_v:[1140,1141,1142],outlin:1299,output:[40,41,43,842,843,844,846,868,869,920,929,930,964,994,997,1006,1028,1037,1060,1078,1090,1094,1124,1129,1144,1200,1202,1203,1204,1225,1227,1229,1231,1233,1235,1236,1237,1256,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284],output_ax:[920,964,1144],output_axi:1144,output_channel:[1273,1274,1275,1276,1277,1278,1279,1282,1283],output_connected_onli:[1244,1246,1250,1285,1286],output_queu:1144,output_shap:[1225,1227,1229,1231,1273,1275,1277,1279],outsid:[994,1007],over:[40,41,842,843,865,867,875,876,877,1113,1116,1200,1204,1207,1209,1210,1211,1213,1215,1242,1243,1287,1288],overal:1299,overflow:[994,997],overhead:1299,overrid:[994,1055,1057,1089],overriden:[1289,1293],overwrit:[40,41,920,964,1144],overwrite_at_key_chain:[40,41],own:[1256,1299,1302],packag:[43,1299],pad:[994,1011,1027,1088,1225,1226,1227,1228,1229,1230,1231,1232,1273,1274,1275,1276,1277,1278,1279,1280],pad_width:[440,994,1011,1088],page:1256,pair:[1225,1237],parallel:[920,929,930,1144],parallelis:[920,929,930,1144],param:[40,41,42,43,440,454,455,851,863,920,964,994,995,1029,1030,1055,1056,1144,1255,1256,1285,1286,1298],paramet:[15,16,17,18,19,40,41,42,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,865,866,867,868,869,872,873,875,876,877,879,898,904,918,919,920,929,930,936,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,959,962,963,964,965,966,969,970,974,975,976,980,981,982,983,984,985,986,993,994,996,997,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1034,1036,1037,1038,1040,1041,1042,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1056,1057,1060,1061,1062,1063,1064,1065,1066,1067,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1092,1093,1094,1095,1096,1097,1098,1099,1101,1103,1104,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298],parameter:[1200,1203,1204],params_all_empti:1250,pardo:1256,pars:[994,1012],part:[842,845,1090,1093,1095,1097,1098,1099,1124,1128,1256,1285,1286,1299],partial:[40,41,43,1285,1286],particl:1302,particular:[43,1302],pass:[40,41,42,43,920,929,964,970,975,994,1006,1090,1104,1140,1141,1142,1144,1262,1263,1285,1286,1289,1293,1295,1296],pattern:[40,41,994,1019,1020,1021],peopl:43,per:[920,1144,1225,1226,1227,1228,1229,1230,1231,1232,1273,1274,1275,1276,1277,1278,1279,1280],percent_used_mem_on_dev:920,percent_used_mem_on_nod:1144,percentag:[920,959,1144],perf_count:1144,perform:[40,41,43,872,873,875,876,877,920,994,999,1000,1015,1019,1020,1021,1040,1041,1042,1046,1047,1090,1093,1095,1097,1098,1099,1106,1107,1140,1141,1142,1143,1144,1188,1193,1194,1207,1209,1210,1211,1212,1213,1214,1215,1217,1222,1225,1233,1235],period:43,permissable_step:1144,permit:43,permut:[489,994,1077,1083],perpendicular:[994,1014],person:[43,1256],physci:1302,pickl:[40,41,1144],pickle_filepath:[40,41],pid:1250,pinv:[353,778,1113],pip:1256,pipelin:1298,pkk:1302,pkkm1:1302,pkm1km1:1302,place:[40,41,43,842,843,844,846,920,965,994,1024,1028,1040,1041,1042,1144,1289,1290,1291,1292,1293,1294],placehold:[43,1188,1197],pleas:[43,489,1113,1118],point:[43,841,842,843,844,846,847,848,851,852,863,865,867,970,985,994,997,1124,1132],popul:[40,41,1200,1201],popular:1302,population_s:[489,490,1200,1201],portabl:[1256,1257],posit:[15,16,17,847,848,851,857,920,942,946,952,994,995,997,1024,1027,1144,1200,1205,1262,1263],possibi:[40,41],possibl:[43,994,1048,1080,1106,1111,1302],post:[1242,1243],post_shap:[40,41],power:[43,879,904,910,994,1032,1065,1074,1264],practic:1256,pre:[920,1144,1256],pre_shap:[40,41],precis:[847,848,851,863],pred:[1238,1239,1240,1241],predict:[1238,1239,1240,1241,1302],preprint:1256,present:[40,41],preserv:[40,41,42,868,869,1090,1101],preserve_typ:[40,41,473,476,1090,1101],press:1256,prevent:[43,1090,1092,1093,1097,1144,1289,1290,1291],prevet:43,previou:[1090,1093,1097],previous:[994,1006],prime:1256,print:[40,41,42,920,960,994,1058,1256,1298],print_all_arrays_in_memori:994,print_all_arrays_on_dev:920,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1289,1293],prob:[489,490,1200,1201,1225,1233,1273,1281],probabl:[1200,1201,1225,1233,1273,1281],problem:[43,1302],process:[43,920,929,930,959,969,994,1053,1144],process_specif:[920,959,969,1144],prod:[40,41,994,1020],produc:[920,929,930,1144],product:[40,41,994,1014,1015,1049,1207,1208,1225,1236,1237,1273,1284],profil:[124,289,438,562,693,920,1144],progress:43,project:[1256,1298,1299,1302],promot:[43,851,852,853,863,865,867,879,904,1124,1132],prompt:1256,properli:43,properti:[40,41,396,920,932,1144,1250,1254,1285,1286,1289,1290,1291,1292,1294],provid:[40,41,43,868,869,875,876,877,918,919,920,937,970,977,978,979,984,993,994,1018,1055,1057,1064,1089,1090,1093,1095,1097,1098,1099,1105,1144,1256,1273,1282,1289,1290,1291,1292,1293,1294,1299],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1113,1117],ptype:[1250,1254],pull:[1256,1257],pure:[40,41,1256,1302],purpos:[43,1302],put:1144,pybroadexcept:1144,pyprotectedmemb:[1144,1251],pyshadowingbuiltin:43,pyshadowingnam:[921,971,972,973,1091,1144],python:[40,41,920,959,969,994,997,1144,1256],pytorch:[1090,1093,1095,1097,1098,1099,1113,1118,1256,1289,1290,1291,1292,1293,1294,1298,1299,1302],pyunresolvedrefer:1144,quadrant:[1124,1129],qualiti:43,queri:[40,41,879,893,914,920,953,963,1144,1225,1236,1237,1273,1284],query_dim:[1273,1284],query_kei:[40,41],queue:[40,41,42,920,929,930,994,1059,1067,1144],queue_class:[920,929,930,1144],queue_load_s:[40,41,42],queue_timeout:[40,41,42,994,1144],quick:[489,1256],quickli:[43,1298],radian:[851,855,1124,1125,1127,1129,1136,1138],rai:[1124,1125],rais:[40,41,43,842,843,875,876,877,879,904,994,1004,1032,1065,1072,1074,1084,1144,1285,1286,1289,1293],ram:[920,959,966,969,1144],randint:[176,363,489,623,804,1200],random:[37,40,41,490,1201,1202,1203,1204,1205,1206,1256],random_crop:1106,random_norm:[176,363,489,623,804,1200],random_uniform:[176,363,489,623,804,1200],randomli:[489,1106,1110,1225,1233,1273,1281],randomness_factor:[1244,1246,1250,1285,1286],rang:[489,994,997,1047,1124,1129,1144,1256,1298,1302],rank:[865,867,875,876,877,994,1011,1085,1088],rate:[1090,1093,1095,1097,1098,1099,1140,1141,1142,1143,1273,1284,1289,1290,1291,1292,1293,1294],rather:[40,41,43,920,964,994,997,1044,1090,1096,1144],ratio:[920,1090,1097,1106,1111,1144,1289,1291],raw:[40,41,1113,1118],raw_delta:1144,reach:[43,920,942,946,952,1144,1188,1197],read:[40,41],readi:[1144,1298],real:[1124,1125,1128],realiti:1299,rearrang:[40,41,994,1019,1021],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1140,1142],receiv:[43,920,929,930,994,998,1048,1144,1273,1283],receivess:[920,1144],receiving_fn:1250,receivng:[1140,1143],recev:[1140,1141,1142],recognit:1302,recommend:1256,rectifi:[1217,1219,1220],recurr:[1225,1235],recurrent_bia:[1225,1235],recurrent_kernel:[1225,1235],recurs:[40,41,1188,1189,1190,1196,1197],redefin:43,reduc:[40,41,875,876,877,920,964,994,1020,1113,1118,1144,1207,1209,1210,1211,1212,1213,1214,1215],reduce_max:[40,41,183,368,491,628,811,1207],reduce_mean:[40,41,183,368,491,628,811,1207,1256,1298],reduce_min:[40,41,183,368,491,628,811,1207],reduce_prod:[40,41,183,368,491,628,811,1207],reduce_std:[40,41,368,1207],reduce_sum:[40,41,183,368,491,628,811,1144,1207],reduce_var:[40,41,183,368,491,628,811,1207],reduct:[39,40,41,440,466,467,875,876,877,994,1020,1063,1064,1208,1209,1210,1211,1212,1213,1214,1215,1256],refactor:43,refer:[43,851,860,875,876,877,1090,1092,1093,1113,1120,1273,1283,1302],reflect:43,reflected_oper:[0,13,14],regard:[920,1144],regardless:[40,41,918,919],register_paramet:1298,reimplement:1302,rel:[868,869,1090,1093,1095,1097,1098,1099],rel_slice_obj:1144,relat:43,relev:[1289,1290,1291,1292,1293,1294],relu:[820,1217,1218,1219,1256,1298],remain:[43,994,1061,1188,1192],remaind:[40,41,994,1026,1071],remov:[40,41,43,994,1072,1140,1141,1142],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,868,869],rep:[994,1078],repeat:[40,41,43,295,701,994,1021,1078,1144,1299],repeated_config_check:[920,1144],repeatedli:[1188,1195],repetit:[40,41,994,1060,1078],replac:[40,41,43,489,490,994,1007,1063,1064,1200,1201],repo:[43,1256],repositori:43,repres:[43,851,852,970,976,981,1225,1234],represent:[40,41,42,43,841,847,848,849,851,853,920,947,948,970,976,982,983,994,1070,1080,1144],reptil:[1140,1143],reptile_step:1140,request:[1256,1257],requir:[43,851,863,918,919,970,974,994,997,1001,1262,1263],resampl:[994,1046],reserv:43,reshap:[40,41,43,489,701,994],reshape_lik:[40,41],respect:[851,853,859,879,898,994,1022,1090,1092,1093,1094,1095,1097,1098,1099,1113,1118,1124,1132,1140,1141,1142,1143],respond:43,respons:[43,1144],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,851,852,853,857,859,860,862,863,865,867,875,876,877,879,898,904,920,929,994,997,1022,1063,1064,1075,1113,1116,1121,1122,1123,1124,1132,1144,1207,1209,1210,1211,1212,1213,1214,1215,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1256],ret:1144,ret_dict:1144,ret_fn:[920,929,930,1144],retain:[1090,1094],retain_grad:[473,474,1090,1094],retreiv:1144,retrn:[994,1070],return_cont:[40,41],return_dict:[40,41],return_graph:[1244,1245,1246],return_inner_v:[1140,1141,1142,1143],return_sequ:[1273,1282],return_st:[1273,1282],rev:[994,1018],revers:[40,41,868,869,994,1018,1083],review:43,right:[40,41,43],rk_e:1302,robot:1256,ronald:1256,root:[43,851,863],round:[295,440,701,851,863,994,997,1144],row:[994,1037,1200,1201],rule:[43,851,853,863,879,904,994,997,1124,1132],run:[43,920,929,1090,1092,1093,1097,1140,1141,1142,1143,1144,1256,1257,1273,1284,1285,1286],safe:[920,929,1144],safety_factor:[920,1144],same:[15,16,17,40,41,43,842,845,851,854,868,869,920,929,930,964,965,970,974,994,995,1010,1025,1026,1029,1030,1055,1057,1062,1063,1064,1075,1089,1090,1096,1101,1113,1119,1124,1128,1140,1141,1142,1144,1207,1208,1225,1226,1227,1228,1229,1230,1231,1232,1256,1273,1274,1275,1276,1277,1278,1279,1280,1298,1302],same_arrai:[40,41],sampl:[842,843,994,1046,1106,1107,1200,1201,1203,1204,1225,1233,1256,1273,1281],satisfi:[994,1001,1113,1115,1120],save:[40,41,994,1068,1079,1106,1108,1285,1286],save_debug_info:1250,save_dir:[438,439,920,935,1144],save_to_disk:[1244,1246,1250,1285,1286],save_weight:[1285,1286],scalar:[865,867,994,1007,1055,1082,1086],scale:[920,962,963,1090,1098,1144,1225,1233,1236,1237,1242,1243,1273,1281,1284,1289,1292],scaled_dot_product_attent:1225,scatter:[994,1055,1063,1064],scatter_flat:[131,295,440,569,701,994],scatter_nd:[131,295,440,569,701,994],scene:[1090,1093,1095,1097,1098,1099],schemat:1256,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,851,853,920,951,994,1002,1014,1022,1059,1067,1077,1090,1092,1093,1097,1140,1142,1144,1289,1290,1291],secondli:1302,sector:[851,852],see:[43,59,396,438,439,489,851,853,865,867,875,876,877,879,898,904,920,932,933,934,935,970,994,997,1047,1090,1124,1132,1250,1254,1256,1264,1266,1267,1269,1270,1272],seed:[40,41,176,489,804,1200],seed_valu:[40,41,489,1200,1205],seem:1256,seen_set:[994,1035],select:[994,1001,1072,1299,1302],self:[40,41,43,59,396,438,439,879,898,904,920,932,933,934,935,970,1090,1144,1250,1254,1256,1264,1266,1267,1269,1270,1272,1289,1293,1298,1302],self_i:[879,898],sent:1144,seper:[43,994,1027],seq:[40,41,42,1207,1208,1285,1286],sequenc:[15,16,17,40,41,42,43,489,842,843,918,919,920,929,930,939,940,941,942,943,944,945,946,949,950,964,970,974,994,997,1001,1003,1005,1010,1011,1037,1048,1051,1056,1060,1061,1064,1071,1075,1078,1083,1088,1090,1094,1106,1110,1111,1113,1116,1144,1188,1199,1200,1202,1204,1207,1209,1210,1211,1212,1213,1214,1215,1225,1226,1227,1228,1229,1230,1231,1232,1242,1243,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280,1282,1285,1286,1287,1288,1289,1293,1295,1296],sequenti:1256,seri:43,set:[15,18,19,40,41,920,949,950,962,963,964,994,996,1017,1037,1065,1066,1067,1068,1090,1093,1095,1096,1097,1098,1099,1113,1116,1144,1188,1189,1196,1198,1199,1200,1201,1205,1207,1209,1210,1211,1212,1213,1214,1215,1254,1256,1273,1282,1289,1290,1291,1292,1293,1294,1299,1302],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1254,set_debug_mod:44,set_default_devic:920,set_default_dtyp:970,set_default_float_dtyp:970,set_default_int_dtyp:970,set_default_nod:1144,set_exception_debug_mod:44,set_framework:[40,41,43,59,1144,1256,1298,1299,1302],set_ivy_backend:[40,41],set_min_bas:994,set_min_denomin:994,set_nest_at_index:1188,set_nest_at_indic:1188,set_param:1250,set_queue_timeout:994,set_split_factor:[920,1144],set_stat:[1289,1290,1291,1292,1293,1294],set_tmp_dir:994,set_with_grad:1090,setter:1144,sever:1302,sgd:[1256,1289],shape0:1144,shape:[40,41,43,391,393,395,440,453,467,489,701,842,844,845,846,851,854,868,869,920,932,970,974,994,995,1005,1010,1011,1024,1025,1026,1028,1030,1034,1037,1055,1056,1057,1060,1061,1062,1063,1064,1070,1072,1075,1088,1089,1106,1110,1113,1115,1118,1124,1128,1129,1144,1200,1202,1203,1204,1207,1208,1225,1227,1229,1231,1250,1254,1273,1275,1276,1277,1278,1279,1280,1287,1288],shape_slic:[40,41],shape_to_tupl:994,share:[40,41,1256,1299],shift:1144,should:[40,41,42,43,489,842,845,851,852,853,857,863,865,867,879,898,904,918,919,920,994,1005,1006,1012,1055,1061,1090,1093,1095,1097,1098,1099,1124,1132,1144,1207,1208,1256],show:[40,41,1250,1256,1302],show_debug_info:1250,show_graph:[1244,1256,1285,1286,1289,1293],show_mod_in_top_mod:[1285,1286],show_structur:[1285,1286],show_sub_contain:[40,41],show_v:[1285,1286],show_v_in_top_v:[1285,1286],shown:[40,41],shp:1144,shuffl:[40,41,176,489,804,1200],shuffle_h5_fil:[40,41],side:43,sigmoid:[820,1217,1256,1298],signatur:[43,59,396,438,439,440,473,478,482,486,487,489,920,932,933,934,935,970,1090,1250,1254,1264,1266,1267,1269,1270,1272],signific:1302,similar:[43,1225,1236,1273,1284],similarli:[1113,1118],simpl:[43,994,1023,1256,1299,1302],simpler:43,simplest:1299,simpli:[40,41,43,1256,1299,1302],simultan:1256,sin:[789,994,1027,1124,1138,1299],sinco:1299,sine:[851,852,1124,1127,1136,1137],singl:[40,41,918,919,920,929,930,949,950,951,952,994,1072,1082,1086,1106,1111,1144,1200,1203,1204,1207,1209,1210,1211,1212,1213,1214,1215,1256,1299,1302],singleton:[865,867,875,876,877],singular:[1113,1119],sinh:[789,1124],siren:[1256,1264],situat:43,size:[40,41,42,440,466,920,943,944,945,946,962,963,964,994,997,1005,1047,1063,1071,1106,1110,1113,1116,1119,1144,1200,1201,1203,1204,1207,1209,1210,1211,1212,1213,1214,1215,1273,1274,1275],size_ordered_arrai:[40,41],skew:[1113,1120],skinv:1302,skip:[40,41],slice:[40,41,872,873,994,1029,1030,1144,1188,1195],slice_kei:[40,41],slice_obj:[40,41,1144],slice_via_kei:[40,41],slide:[1225,1226,1227,1228,1229,1230,1231,1232,1273,1274,1275,1276,1277,1278,1279,1280],slope:[1217,1219],small:[1238,1239,1240,1241,1242,1243,1256,1287,1288,1299],smaller:[994,1007],smallest:[40,41,847,848,849,851,854,994,1000],smallest_norm:[396,847,848],softmax:[192,500,820,1217,1225,1236,1237],softplu:[820,1217],solut:43,solv:1302,some:[40,41,43,994,997,1090,1092,1093,1095,1097,1098,1099,1104,1225,1233,1256,1273,1281,1299,1302],some_backend:43,some_namespac:43,someth:[43,1302],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,873,1113,1119,1144],sort_by_kei:[40,41],sorting_funct:[872,873],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,391,392,393,394,395,396,398,399,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,487,488,489,490,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,872,873,875,876,877,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,922,923,924,925,926,927,929,930,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1254,1259,1260,1261,1262,1263,1264,1266,1267,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1300,1301,1302],space:[842,843,994,997,1027,1047],spars:[1238,1241],sparse_cross_entropi:1238,spawn:[994,1053],special:[851,852],specif:[40,41,43,920,962,994,1012,1019,1020,1021,1053,1140,1141,1142,1143,1144,1200,1206,1256,1285,1286,1298,1299],specifc:[1200,1201],specifi:[40,41,43,842,843,845,865,866,867,868,869,875,876,877,920,939,940,941,942,943,944,945,946,949,950,954,956,960,963,964,965,970,974,976,994,997,999,1000,1001,1007,1010,1011,1028,1029,1030,1036,1047,1075,1085,1088,1113,1116,1144,1188,1193,1194,1198,1199,1207,1208,1209,1210,1211,1212,1213,1214,1215],split:[40,41,131,295,440,569,701,920,929,943,944,945,946,962,963,964,994,1048,1144],split_arg:1144,split_factor:[920,929,1144],split_func_cal:[920,1144],split_siz:1144,spread:[920,952,1144],sqrt:[87,218,401,524,655,851,865,867],squar:[851,863,994,1037,1113,1115],squeez:[131,295,440,569,701,994],stabil:[872,873,994,1073,1074],stabl:[872,873,994,1032,1033,1065,1066,1073,1074],stable_divid:994,stable_pow:994,stack:[40,41,295,701,842,845,994,1106,1111,1188,1189,1196,1273,1282],stack_imag:[166,349,478,612,774,1106],stacked_dim_s:1144,stage:43,standard:[40,41,847,848,1200,1203,1207,1213,1242,1243,1256,1257,1287,1288],start:[40,41,43,391,392,438,439,440,441,463,489,842,843,920,935,994,997,1047,1144,1256,1299],starting_index:[40,41],starting_split_factor:[920,1144],state:[1144,1225,1235,1244,1245,1246,1250,1256,1259,1260,1261,1262,1263,1264,1266,1267,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298],statement:1299,static_argnam:[440,446,918,919],static_argnum:[440,446,918,919],std:[489,1200,1203],step:[40,41,440,441,920,994,997,1047,1090,1092,1093,1095,1097,1098,1099,1140,1141,1142,1143,1144,1256,1289,1290,1291,1292,1293,1294,1298,1302],stephen:1256,stick:1256,still:[40,41,43],stochast:[1289,1294],stop:[40,41,391,392,438,439,440,441,463,842,843,920,935,964,994,997,1047,1090,1093,1095,1097,1098,1099,1101,1140,1141,1142,1143,1144,1289,1290,1291,1292,1293,1294],stop_gradi:[40,41,344,473,607,768,920,964,1090,1093,1095,1097,1098,1099,1140,1141,1142,1143,1144,1289,1290,1291,1292,1293,1294],stopiter:1144,store:[40,41,994,1027,1071,1090,1104,1285,1286],store_var:[1285,1286],str:[15,16,17,40,41,42,43,391,392,393,395,396,398,399,847,848,849,918,919,920,929,930,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,964,970,975,976,981,982,983,984,985,986,993,994,1001,1017,1019,1020,1021,1051,1053,1056,1063,1064,1113,1116,1118,1140,1141,1142,1143,1144,1188,1192,1207,1208,1262,1263,1273,1284,1285,1286],str_to_nod:1144,straight:1299,strength:[1256,1302],stride:[1225,1226,1227,1228,1229,1230,1231,1232,1273,1274,1275,1276,1277,1278,1279,1280],string:[40,41,43,920,936,938,947,948,953,959,965,966,969,970,974,980,982,983,984,993,994,997,1001,1017,1037,1056,1057,1089,1144,1225,1226,1227,1228,1229,1230,1231,1232,1273,1274,1275,1276,1277,1278,1279,1280,1285,1286],structur:[40,41,42,43,994,1012],structural_diff:[40,41],sub:[40,41,43,920,943,944,949,950,951,952,994,1071,1140,1141,1142,1143,1144],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1144,sub_mod:[1285,1286],sub_modul:[1295,1296],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1256,1257,1287,1288,1295,1296],subsequ:43,subset:43,substr:[40,41],suffici:[1113,1118],suggest:1256,suitabl:[1106,1111],sum:[40,41,440,466,467,865,867,920,949,950,951,952,964,994,1016,1020,1063,1064,1144,1207,1208,1214],summat:[40,41,1207,1208],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,83,84,85,88,89,90,91,92,93,94,95,96,97,98,99,102,103,105,109,112,113,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,212,214,215,216,219,220,221,222,223,224,225,228,229,231,235,238,239,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,350,351,352,354,355,356,357,358,360,361,364,365,366,367,369,370,371,372,373,374,375,376,379,381,382,383,384,385,386,387,392,393,394,395,397,398,399,402,403,404,405,406,407,408,409,410,411,412,413,416,417,419,423,426,427,439,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,474,475,476,477,479,480,481,483,484,485,488,490,492,493,494,495,496,497,498,501,502,504,505,506,507,508,509,510,515,516,517,518,520,521,522,525,526,527,528,529,530,531,532,533,534,535,536,539,540,542,546,549,550,558,563,564,565,566,567,568,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,608,609,610,611,613,614,615,617,618,619,620,624,625,626,627,629,630,631,632,633,634,635,639,640,641,646,647,648,649,651,652,653,656,657,658,659,660,661,662,663,664,665,666,667,670,671,673,677,680,681,689,694,695,696,697,698,699,700,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,769,770,771,772,773,775,776,777,779,780,781,782,783,784,785,787,788,790,791,792,793,794,795,796,797,798,799,800,801,802,803,805,806,807,808,809,810,812,813,814,815,816,817,818,821,822,823,824,825,826,827,829,830,832,833,834,835,836,837,838,843,844,845,846,848,849,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,869,873,876,877,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,919,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1141,1142,1143,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1243,1245,1246,1248,1249,1251,1255,1256,1260,1261,1263,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286,1288,1289,1290,1291,1292,1293,1294,1296,1297,1298,1299,1301,1302],supports_inplac:994,suppos:1302,sure:43,svd:[353,616,778,1113],swap:[40,41,994,1077],swapax:[40,41,569,701,994,1302],symmetr:[1113,1120],syntax:[438,440,473,478,482,486,487,489],tab:1256,take:[43,994,1046],taken:[43,1207,1209,1210,1211,1213,1215],tan:[789,1124,1128],tangent:[1124,1128,1129,1130,1138,1139,1217,1224],tanh:[789,820,1124,1217],target:[40,41,920,936,939,940,941,942,943,944,945,946,949,950,951,952,965,1144,1256],target_dict:[40,41],task:[43,1140,1141,1142,1143],team:[43,1302],templat:1256,temporari:[994,1068,1079],tensor:[40,41,43,440,466,467,872,873,920,938,970,980,994,997,999,1000,1005,1047,1050,1052,1055,1056,1057,1061,1063,1064,1071,1089,1144,1200,1201,1202,1225,1233,1235,1256,1273,1281,1283,1289,1290,1291,1292,1293,1294,1298,1299],tensorflow:[43,1113,1118,1225,1227,1229,1231,1256,1273,1275,1277,1279,1299,1302],term:[40,41,43,1225,1235,1256,1273,1283],termcolor:[40,41,42],termin:[40,41,42,1144],test:[43,851,857,875,876,877,970,985,986],test_array_api:43,tf_concat:1256,than:[40,41,43,847,848,851,854,865,867,868,869,920,964,994,997,1007,1025,1044,1050,1072,1075,1090,1096,1144,1200,1204,1256,1299],thei:[40,41,43,1124,1129,1140,1141,1142,1200,1201,1256,1295,1296,1299],them:[1256,1302],themselv:[1188,1189],therefor:43,thi:[40,41,42,43,920,942,946,952,959,964,969,994,997,1027,1059,1061,1067,1090,1093,1095,1096,1097,1098,1099,1104,1113,1116,1144,1188,1192,1197,1207,1209,1210,1211,1212,1213,1214,1215,1225,1234,1256,1285,1286,1289,1290,1291,1292,1293,1294,1298,1299,1302],thing:[43,1256],those:[40,41,43,994,1007,1090,1104,1113,1119,1144],though:43,thought:43,threshold:[994,1050,1052],through:[40,41,43],tick:43,tickbox:43,tile:[295,569,701,994],time:[43,994,1078,1090,1093,1097,1140,1141,1142,1143,1144,1200,1201,1225,1235,1273,1284,1285,1286,1302],time_chronolog:[1244,1245,1250],time_infer:[1244,1245],timeout:[40,41,42,920,929,930,994,1059,1067,1144],timestep:[1225,1235,1273,1282],timing_fnam:[1244,1245],titl:[43,1256],tmp_dir:994,tmp_dr:[994,1068],to_appli:[40,41],to_clon:[920,1144],to_dev:[40,41,124,289,438,562,693,920],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[920,1144],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1256],to_ivy_modul:[194,828,1256,1262],to_json:[40,41],to_kv_fn:[1225,1236],to_kv_v:[1225,1236],to_list:[40,41,440,701,994],to_multi_dev:[40,41],to_mut:[1188,1190,1197],to_n:[15,40,41,1256],to_nod:1144,to_numpi:[40,41,440,701,994,1256,1298],to_out_fn:[1225,1236],to_out_v:[1225,1236],to_q_fn:[1225,1236],to_q_v:[1225,1236],to_raw:[40,41],to_scalar:[440,701,994],todo:[1144,1256,1257],togeth:[40,41,1295,1296],tool:[1256,1299],top_mod:[1285,1286],topic:1302,torch:[43,918,919,1256,1298,1299,1302],torch_concat:1256,torchfcmodel:1298,total:[40,41,42,920,966,1144],total_mem_on_dev:920,total_mem_on_nod:1144,tpu:[920,967,1144],tpu_is_avail:[438,562,693,920,1144],tpye:[970,981],trace:[40,41,994,1044],track:[43,920,1144,1188,1197,1285,1286],track_submod_call_ord:[1285,1286],track_submod_ret:[1285,1286],trail:[1287,1288],train:[1090,1092,1093,1097,1256,1257],trainabl:[1090,1096,1256,1257,1262,1263,1285,1286,1295],trainer:1256,tran:1302,transform:[1225,1233,1234],transpos:[40,41,131,295,440,701,920,951,994,1144,1225,1227,1229,1231,1273,1275,1277,1279],travers:[15,18,19,40,41,1188,1197],treat:[40,41,918,919],tree_depth:1254,tree_height:1250,tri:[40,41],triangular:[842,845],trigonometr:[851,855,1124,1125,1128,1136],tril:[77,208,391,514,645,842],trim_kei:[40,41],trust:[1090,1097,1289,1291],truth:[851,859,862,879,898,994,1022,1121,1122,1123],try_else_non:994,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[920,1144],tune_dev_alloc:920,tune_dev_split:920,tune_node_alloc:1144,tune_node_split:1144,tune_step:[920,1144],tupl:[15,16,17,18,19,40,41,43,391,393,395,842,844,846,865,867,868,869,875,876,877,918,919,994,1011,1027,1028,1070,1088,1144,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1202,1207,1209,1210,1211,1212,1213,1214,1215],tutori:43,two:[40,41,842,845,994,997,1002,1014,1049,1077,1113,1116,1119],type:[15,18,40,41,42,43,59,398,399,438,439,842,843,844,845,846,848,849,851,852,853,854,857,859,863,865,867,868,869,875,876,877,879,898,904,920,932,933,934,935,947,948,952,964,970,974,975,976,980,981,982,983,984,985,986,993,994,995,997,1001,1010,1012,1022,1025,1026,1028,1037,1044,1055,1056,1057,1062,1076,1086,1089,1090,1096,1101,1124,1132,1144,1250,1254,1256,1264,1266,1267,1269,1270,1272,1285,1286,1299],types_to_iteratively_nest:[40,41,42],uint8:[1106,1108,1112],uint8_img_to_float_img:1106,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[851,853],underwai:43,unfairli:43,unif:1144,unifi:[40,41,920,949,950,951,952,964,1144,1256],uniform:[40,41,1200,1201,1203,1204,1264,1266,1267,1270,1271],uniformli:[1200,1202,1204],unify_arrai:1144,unify_it:1144,unify_nest:1144,union:[15,18,19,40,41,43,391,392,393,395,396,398,399,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,865,867,868,869,872,873,875,876,877,879,898,904,918,919,920,938,943,944,945,946,964,965,970,974,975,976,980,981,982,983,984,985,986,993,994,995,996,997,999,1000,1001,1002,1003,1005,1007,1008,1009,1010,1011,1013,1014,1015,1016,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1034,1036,1037,1038,1045,1046,1047,1049,1050,1051,1052,1055,1056,1057,1060,1061,1062,1063,1064,1069,1070,1071,1072,1075,1077,1078,1080,1081,1082,1083,1085,1086,1087,1088,1089,1144,1188,1189,1190,1196,1197],uniqu:[920,929,930,1140,1141,1142,1143,1144,1188,1192],unique_kwarg:1144,unit:[43,920,1124,1125,1127,1144,1217,1218,1219,1220],unitari:[1113,1119],unless:[994,1055,1057,1089],unlik:[920,1144],unnorm:[1200,1201],unpack:[994,1085],unrol:[1225,1235],unset:1299,unset_debug_mod:44,unset_default_devic:920,unset_default_dtyp:970,unset_default_float_dtyp:970,unset_default_int_dtyp:970,unset_framework:[59,1299],unset_with_grad:1090,unstack:[40,41,131,295,440,569,701,994],until:43,unus:[918,919],updat:[40,41,440,466,467,920,929,994,1042,1063,1064,1090,1092,1093,1095,1097,1098,1099,1140,1141,1142,1144,1188,1193,1194,1198,1199,1225,1235,1256,1257,1262,1263,1289,1290,1291,1292,1293,1294,1299,1302],update_backend:[40,41],update_config:[40,41],update_inference_tim:1250,upon:43,upper:[40,41,1200,1204],upper_depth:[1285,1286],upstream:43,usabl:[1256,1302],usag:[920,964,1144],use:[40,41,42,43,489,920,929,930,955,967,994,1060,1073,1074,1113,1118,1144,1225,1236,1242,1243,1256,1287,1288,1299,1302],used:[40,41,43,489,920,929,959,962,963,969,970,981,994,1032,1033,1048,1057,1063,1064,1065,1066,1089,1090,1097,1098,1113,1116,1140,1141,1142,1143,1144,1188,1197,1273,1284,1289,1291,1292,1298,1299],used_dev:[920,929],used_mem_on_dev:920,used_mem_on_nod:1144,used_node_str:1144,used_node_strs_dict:1144,useful:[40,41,920,964,1144,1225,1234,1256,1299],user:[1256,1273,1284,1285,1286,1299,1302],uses:1256,using:[40,41,1090,1092,1093,1188,1191,1195,1207,1208,1225,1233,1237,1256,1273,1281,1298,1299,1302],util:[920,953,1144],utility_funct:[875,876,877],v_with_top_v_key_chain:[1285,1286],val:[40,41,440,458,459,460,879,914,994,1040,1041,1042,1065,1066,1254],valid:[875,876,877,970,975,994,1073,1074,1225,1226,1227,1228,1229,1230,1231,1232,1273,1274,1275,1276,1277,1278,1279,1280],valid_dtyp:970,valu:[40,41,440,842,843,851,858,859,862,865,867,872,873,879,898,920,932,963,964,994,995,997,999,1000,1007,1008,1009,1011,1012,1018,1022,1027,1028,1029,1030,1045,1047,1050,1052,1059,1060,1061,1062,1063,1064,1065,1066,1067,1083,1086,1087,1088,1090,1094,1097,1106,1112,1113,1119,1121,1122,1123,1124,1133,1134,1135,1140,1141,1142,1144,1188,1192,1193,1194,1198,1199,1200,1203,1204,1207,1209,1211,1225,1236,1237,1242,1243,1250,1273,1284,1287,1288,1289,1291],value_is_nan:994,vanilla:[1140,1142],var_shap:1264,variabl:[15,16,17,18,19,40,41,344,473,607,768,994,1004,1040,1041,1042,1043,1044,1076,1090,1093,1094,1095,1096,1097,1098,1099,1101,1104,1140,1141,1142,1143,1225,1236,1242,1243,1262,1263,1264,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296],variable_data:[473,768,1090],varianc:[40,41,1207,1215,1302],varieti:1299,variou:[43,1256],vector:[40,41,482,485,865,867,994,1009,1014,1113,1119,1120,1225,1234,1273,1283],vector_norm:[40,41,101,227,415,538,669,865],vector_to_skew_symmetric_matrix:[170,353,482,616,778,1113],verbos:1301,veri:[43,1256],verifi:43,version:43,via:[1188,1189,1196,1299],view:[1106,1111],vision:1256,visual:1299,volum:[1225,1230],vw_tm1:[1090,1093,1097],wai:[1299,1302],wait:[40,41,42,43],want:[43,1256,1299,1302],warn:[59,66,67,68,69,70],warp:[478,479,1106,1107],watch:1298,websit:43,weight:[1090,1092,1093,1095,1097,1098,1099,1225,1234,1235,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1285,1286,1289,1291,1292],weight_initi:[1273,1274,1275,1276,1277,1278,1279,1280,1282,1283],weights_path:[1285,1286],well:[40,41,994,1036],were:[40,41,1144],what:[43,1256],when:[40,41,42,43,920,994,1006,1074,1087,1113,1119,1144,1256,1285,1286,1299,1302],where:[40,41,43,295,440,701,851,858,860,875,876,877,879,904,994,997,1005,1007,1011,1024,1038,1045,1055,1088,1113,1119,1188,1189,1196,1200,1201],wherea:43,wherebi:[1188,1197],whether:[15,18,19,40,41,42,842,843,875,876,877,918,919,920,938,951,955,959,964,967,969,970,980,984,985,986,993,994,996,1002,1003,1015,1018,1023,1027,1034,1036,1039,1043,1044,1048,1069,1076,1085,1086,1090,1093,1094,1095,1096,1097,1098,1099,1101,1140,1141,1142,1143,1144,1188,1189,1190,1192,1196,1197,1200,1201,1217,1218,1225,1233,1256,1262,1263,1273,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294],which:[40,41,42,43,489,842,843,844,845,846,847,848,849,865,866,867,868,869,875,876,877,918,919,920,929,930,938,943,944,945,946,949,950,951,952,954,956,960,962,963,964,970,975,980,984,993,994,997,1001,1010,1012,1014,1015,1016,1018,1028,1029,1030,1031,1037,1038,1046,1047,1054,1055,1056,1057,1058,1060,1063,1064,1071,1075,1085,1087,1089,1090,1093,1094,1095,1097,1098,1099,1101,1103,1104,1106,1108,1113,1116,1124,1129,1144,1188,1192,1193,1194,1198,1199,1200,1201,1202,1203,1204,1207,1209,1210,1211,1212,1213,1214,1215,1217,1222,1225,1236,1237,1256,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1295,1296,1298,1299],whilst:43,whitespac:[40,41,42],who:43,whose:[43,842,845,851,852,868,869,879,904,994,1001,1006,1207,1208,1209,1210,1211,1213,1215],why:[1256,1257],width:[1106,1111],wiki:1302,wikipedia:1302,window:[1106,1111,1225,1226,1227,1228,1229,1230,1231,1232,1273,1274,1275,1276,1277,1278,1279,1280],wise:[40,41,43,851,853,854,855,859,862,879,898,904,994,1007,1022,1025,1026,1050,1052,1062,1090,1093,1095,1097,1099,1121,1122,1123,1124,1125,1127,1128,1129,1132,1133,1134,1135,1136,1138,1217,1218,1219,1220,1221,1222,1223,1224],wish:1299,with_arg_label:[1244,1246,1250,1285,1286],with_array_cach:[1244,1245,1246,1250],with_bia:[1273,1283],with_cal:[994,1018],with_default_key_color:[40,41],with_edge_label:[1244,1246,1250,1285,1286],with_entries_as_list:[40,41],with_grad:[1090,1100,1285,1286],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1144,with_output_label:[1244,1246,1250,1285,1286],with_partial_v:[1285,1286],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,440,468,994,1071,1144],with_to_kv_fn:[1273,1284],with_to_out_fn:[1273,1284],with_to_q_fn:[1273,1284],within:[15,18,19,43,994,997,1113,1119,1200,1204],without:[40,41,43,994,1059,1061,1067,1188,1190,1299],wonder:1256,word:[15,16,17,994,997,1200,1204,1262,1263],work:[43,1298],worker:[920,929,930,1144],worker_class:[920,929,930,1144],worker_kwarg:1144,would:[43,872,873,1217,1222,1256,1299,1302],wrap:[15,40,41,42,43,438,440,473,478,482,486,487,489,994,1006,1090,1104,1256],wrapper:43,write:[40,41,43,1256,1257,1302],written:[43,1256,1302],ws_new:[1090,1093,1095,1097,1098,1099],x1_i:[851,853,859,994,1022,1124,1132],x2_i:[851,853,859,994,1022,1124,1132],x_feat_dim:[1225,1236],x_i:[851,852,857,863],x_in:[1256,1298],x_inv:[1113,1115],x_max:[440,994,1007],x_min:[440,994,1007],x_sub:1144,xkk:1302,xkkm1:1302,xkm1km1:1302,xs0:1144,xs_t:1144,year:[1256,1302],yet:[1188,1197,1302],yield:[994,1087],you:[43,1256,1298,1299,1302],your:[1256,1257,1298,1299,1302],your_awesome_project:1299,yourself:[43,1256],yourslef:43,youtub:43,zero:[40,41,77,208,391,514,645,842,845,865,867,875,876,877,994,1011,1055,1057,1063,1064,1088,1089,1090,1092,1093,1097,1098,1225,1233,1256,1264,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1289,1290,1291,1292],zero_pad:[295,440,569,701,994],zeros_lik:[131,295,440,569,701,994],zip:1144,zk_e:1302},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","linspace","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","linspace","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace_non_standard","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","linspace","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","linspace","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace_non_standard","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","linspace","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace_non_standard","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","linspace","ones","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1018,"function":[77,82,87,100,104,106,107,108,110,111,208,213,218,226,230,232,233,234,236,237,391,396,401,414,418,420,421,422,424,425,514,519,524,537,541,543,544,545,547,548,645,650,655,668,672,674,675,676,678,679,842,847,851,864,868,870,871,872,874,875],Ones:1269,Using:1299,abs:[296,570,702,995],aco:[790,1125],acosh:[791,1126],activ:[192,378,500,637,820,1217,1259],adam:1290,adam_step:1092,adam_upd:1093,algebra:[101,170,227,353,415,482,538,616,669,778,865],all:[112,238,426,549,680,876],all_equ:996,all_nested_indic:1189,ani:[113,239,427,550,681,877],api:[0,43,75,115,206,241,389,429,512,552,643,683,840],arang:[132,297,441,571,703,997],arg_nam:998,argmax:[133,442,572,704,999],argmin:[134,443,573,705,1000],args_to_ivi:16,args_to_n:17,argsort:[109,235,423,546,677,873],arithmet:[1,116,242,430,553,684],arrai:[0,3,43,75,114,115,117,135,206,240,241,243,250,298,389,428,429,431,444,512,551,552,554,574,643,682,683,685,706,840,879,1001],array_equ:[299,707,1002],arrays_equ:1003,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[792,1127],asinh:[88,402,525,656,852],assert_supports_inplac:1004,atan2:[794,1129],atan:[793,1128],atanh:[795,1130],attribut:[5,118,244,432,555,686],backend:[43,73],bilinear_resampl:[167,350,479,613,775,1107],binary_cross_entropi:1239,bitwis:[7,119,245,433,556,687],bitwise_and:[89,219,403,526,657,853],broadcast_to:[300,708,1005],builder:51,builtin:[114,240,250,428,551,682,879],builtin_ab:[251,880],builtin_add:[252,881],builtin_and:[253,882],builtin_bool:[254,883],builtin_contain:[255,884],builtin_deepcopi:[256,885],builtin_dir:[257,886],builtin_eq:[258,887],builtin_float:[259,888],builtin_floordiv:[260,889],builtin_g:[261,890],builtin_getattr:[262,891],builtin_getattribut:[263,892],builtin_getitem:[264,893],builtin_gt:[265,894],builtin_int:[266,895],builtin_invert:[267,896],builtin_l:[268,897],builtin_lt:[269,558,689,898],builtin_mul:[270,899],builtin_n:[271,900],builtin_neg:[272,901],builtin_or:[273,902],builtin_po:[274,903],builtin_pow:[275,904],builtin_radd:[276,905],builtin_rand:[277,906],builtin_rfloordiv:[278,907],builtin_rmul:[279,908],builtin_ror:[280,909],builtin_rpow:[281,910],builtin_rsub:[282,911],builtin_rtruediv:[283,912],builtin_rxor:[284,913],builtin_setitem:[285,914],builtin_sub:[286,915],builtin_truediv:[287,916],builtin_xor:[288,917],cache_fn:1006,cast:[136,301,445,575,709,974],ceil:[90,220,404,527,658,854],choleski:[779,1114],choose_random_framework:61,citat:1256,clear_framework_stack:62,clear_mem_on_dev:[695,936],clip:[302,710,1007],clip_matrix_norm:1008,clip_vector_norm:1009,clone:1159,clone_arrai:1160,clone_it:1161,clone_nest:1162,clonedit:1146,cloneditem:1145,clonednest:1147,closest_valid_dtyp:975,code:1302,comparison:[9,120,246,434,557,688],compil:[303,446,711,918,919,1244],compile_graph:1245,concaten:[137,304,447,576,712,1010],constant:[76,207,390,513,644,841],constant_pad:[305,577,713,1011],contain:[40,41],container_typ:[714,1012],content:1256,contribut:43,conv1d:[198,381,504,832,1226,1274],conv1d_transpos:[199,382,505,833,1227],conv1dtranspos:1275,conv2d:[200,383,506,639,834,1228,1276],conv2d_transpos:[201,384,507,835,1229],conv2dtranspos:1277,conv3d:[202,385,508,640,836,1230,1278],conv3d_transpos:[203,386,509,837,1231],conv3dtranspos:1279,convers:15,convert:[194,828,1262],convert_dtyp:976,copy_arrai:[715,1013],copy_nest:1190,core:[123,249,437,561,692,878],cos:[91,405,528,659,855],cosh:[92,406,529,660,796,856,1131],cprint:1301,creat:43,creation:[77,208,391,514,645,842],cross:[306,716,1014],cross_entropi:1240,cumprod:[138,307,448,717,1015],cumsum:[718,1016],current_framework:63,current_framework_str:[719,1017],data:[82,86,213,217,396,400,519,523,650,654,847,850],debug_mod:45,debugg:44,default_devic:937,default_dtyp:977,default_float_dtyp:978,default_int_dtyp:979,default_nod:1163,depthwise_conv2d:[204,387,510,641,838,1232],depthwiseconv2d:1280,design:43,dev:[126,291,564,696,938],dev_clon:939,dev_clone_arrai:940,dev_clone_it:941,dev_clone_nest:942,dev_dist:943,dev_dist_arrai:944,dev_dist_it:945,dev_dist_nest:946,dev_from_str:[127,292,565,697,947],dev_to_str:[128,293,566,698,948],dev_unifi:949,dev_unify_arrai:950,dev_unify_it:951,dev_unify_nest:952,dev_util:953,devclonedit:923,devcloneditem:922,devclonednest:924,devdistit:926,devdistitem:925,devdistnest:927,devic:[20,124,289,438,562,693,920],devmapp:929,devmappermultiproc:930,diagon:[102,228,416,539,670,866],distribute_nest:1164,divid:1132,document:1256,dropout:[1233,1281],dtype:[139,308,449,578,720,970,980],dtype_bit:[140,309,450,579,721,981],dtype_from_str:[141,310,451,580,722,982],dtype_to_str:[142,311,452,581,723,983],ecosystem:52,einops_rearrang:1019,einops_reduc:1020,einops_repeat:1021,einsum:[184,369,492,629,812,1208],elementwis:[87,218,401,524,655,851],equal:[582,724,1022],erf:[488,797,1133],execute_with_gradi:[164,345,474,608,769,1094],exist:1023,exp:[798,1134],expand_dim:[312,725,1024],finfo:[84,215,398,521,652,848],firstlayersiren:1266,flip:[105,231,419,542,673,869],float_img_to_uint8_img:1108,floor:[313,726,1025],floormod:[314,727,1026],fomaml_step:1141,fork:43,fourier_encod:1027,framework:59,full:[143,315,453,583,728,1028],func:72,gather:[144,316,454,584,729,1029],gather_nd:[145,317,455,585,730,1030],geglu:1260,gelu:[379,501,821,1218,1261],gener:[22,131,295,440,569,701,994],get_all_arrays_in_memori:1031,get_all_arrays_on_dev:954,get_framework:64,get_min_bas:1032,get_min_denomin:1033,get_num_dim:[731,1034],get_referrers_recurs:1035,global:1247,glorotuniform:1267,gpu_is_avail:[955,1165],gradient:[24,163,344,473,607,768,1090],gradient_descent_upd:1095,gradient_imag:[168,351,480,614,776,1109],graph:1250,gym:53,handler:59,has_nan:1036,helper:1252,ident:[146,318,456,586,732,1037],iinfo:[85,216,399,522,653,849],imag:[26,166,349,478,612,774,1106],index_nest:1191,indices_wher:[147,319,457,733,1038],initi:1264,inplac:[11,121,247,435,559,690],inplace_arrays_support:1039,inplace_decr:[148,320,458,587,734,1040],inplace_incr:[149,321,459,588,735,1041],inplace_upd:[150,322,460,589,736,1042],inplace_variables_support:1043,inv:[780,1115],invalid_dtyp:984,is_arrai:[151,323,461,590,737,1044],is_float_dtyp:985,is_int_dtyp:986,is_vari:[165,346,475,609,770,1096],isfinit:[93,221,407,530,661,857],isinf:[324,591,738,1045],isnan:[94,222,408,531,662,858],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,839,1298,1299,1302],ivymodul:[195,829],jax:74,keep:43,lamb:1291,lamb_upd:1097,lar:1292,lars_upd:1098,layer:[197,380,503,638,831,1225,1273],layer_norm:1243,layernorm:1288,leaky_relu:[822,1219],less:[95,223,409,532,663,859],linalg:[28,1113],linear:[101,170,227,353,415,482,538,616,669,778,865,1234,1283],linear_resampl:[152,325,462,592,739,1046],linspac:[78,209,392,515,646,843],linspace_non_standard:[326,593,740],list:43,log1p:[96,410,533,664,860],log2:[97,411,534,665,861],log:[799,1135,1253],log_global_inference_abs_tim:1248,log_global_inference_rel_tim:1249,logic:[30,174,359,486,621,786,1121],logical_and:[360,787,1122],logical_not:[98,224,412,535,666,862],logical_or:[361,788,1123],logspac:[153,327,463,594,741,1047],loss:1238,lstm:1282,lstm_updat:1235,maml_step:1142,manipul:[104,230,418,541,672,868],map:1192,map_nest_at_index:1193,map_nest_at_indic:1194,match_kwarg:1048,math:[32,175,362,487,622,789,1124],matmul:[328,595,742,1049],matrix_norm:[171,354,483,617,781,1116],maximum:[743,1050],mech:54,memori:55,meshgrid:[329,744,1051],meta:[34,1140],method:[100,226,414,537,668,864],minimum:[745,1052],model:56,modul:[1285,1286,1298],multi:1144,multi_head_attent:1236,multi_index_nest:1195,multidevcontain:42,multidevit:933,multidevitem:932,multidevnest:934,multiheadattent:1284,multinodeit:1150,multinodeitem:1149,multinodenest:1151,multinomi:[177,364,490,624,805,1201],multiprocess:[746,1053],mxnet:205,nativ:1298,nest:1188,nested_indices_wher:1196,nested_map:1197,network:1298,next:1256,node:[1144,1166],node_dist:1167,node_dist_arrai:1168,node_dist_it:1169,node_str:1170,node_to_str:1171,node_util:1172,nodedistit:1153,nodedistitem:1152,nodedistnest:1154,nodemapp:1156,nodemappermultiproc:1157,norm:[1242,1287],num_arrays_in_memori:1054,num_arrays_on_dev:956,num_cpu_cor:957,num_gpu:[129,958,1173],numpi:388,nutshel:1256,one_hot:[154,464,596,747,1055],ones:[79,210,393,516,647,844,1056],ones_lik:[155,330,465,597,748,1057],oper:[1,3,7,9,11,13,43,116,117,119,120,121,122,242,243,245,246,247,248,430,431,433,434,435,436,553,554,556,557,559,560,684,685,687,688,690,691],optim:[1289,1293],optimizer_upd:1099,overview:1256,param:1254,percent_used_mem_on_dev:959,percent_used_mem_on_nod:1174,pinv:[355,782,1117],portabl:1302,print_all_arrays_in_memori:1058,print_all_arrays_on_dev:960,profil:[125,290,439,563,694,935,1158],pull:43,queue_timeout:1059,randint:[178,365,625,806,1202],random:[36,176,363,489,623,804,1200],random_crop:1110,random_norm:[179,366,626,807,1203],random_uniform:[180,367,627,808,1204],reduce_max:[185,370,493,630,813,1209],reduce_mean:[186,371,494,631,814,1210],reduce_min:[187,372,495,632,815,1211],reduce_prod:[188,373,496,633,816,1212],reduce_std:[374,1213],reduce_sum:[189,375,497,634,817,1214],reduce_var:[190,376,498,635,818,1215],reduct:[38,183,368,491,628,811,1207],reflect:[13,122,248,436,560,691],relu:[823,1220],repeat:[331,749,1060],reptile_step:1143,request:43,reshap:[750,1061],robot:57,round:[332,751,1062],run:1299,scaled_dot_product_attent:1237,scatter_flat:[156,333,466,598,752,1063],scatter_nd:[157,334,467,599,753,1064],search:[106,232,420,543,674,870],seed:[181,809,1205],sequenti:[1295,1296],set:[107,233,421,544,675,871],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:961,set_default_dtyp:987,set_default_float_dtyp:988,set_default_int_dtyp:989,set_default_nod:1175,set_exception_debug_mod:48,set_framework:65,set_min_bas:1065,set_min_denomin:1066,set_nest_at_index:1198,set_nest_at_indic:1199,set_queue_timeout:1067,set_split_factor:[962,1176],set_tmp_dir:1068,set_with_grad:1100,sgd:1294,shape:[754,1069],shape_to_tupl:1070,show_graph:1246,shuffl:[182,810,1206],sigmoid:[824,1221],signatur:[100,226,414,537,668,864],sin:[800,1136],sinh:[801,1137],siren:1270,softmax:[193,502,825,1222],softplu:[826,1223],sort:[108,234,422,545,676,872],sparse_cross_entropi:1241,split:[158,335,468,600,755,1071],split_factor:[963,1177],split_func_cal:[964,1178],sqrt:[99,225,413,536,667,863],squeez:[159,336,469,601,756,1072],stable_divid:1073,stable_pow:1074,stack:[337,757,1075],stack_imag:[169,352,481,615,777,1111],standard:43,statist:[110,236,424,547,678,874],stop_gradi:[347,476,610,771,1101],str_to_nod:1179,submodul:43,supports_inplac:1076,svd:[357,619,784,1119],swapax:[602,758,1077],tan:[802,1138],tanh:[803,827,1139,1224],tensorflow:511,tile:[338,603,759,1078],tmp_dir:1079,to_dev:[130,294,567,699,965],to_ivi:18,to_ivy_modul:[196,830,1263],to_list:[760,1080],to_n:19,to_nod:1180,to_numpi:[761,1081],to_scalar:[762,1082],todo:43,torch:642,total_mem_on_dev:966,total_mem_on_nod:1181,tpu_is_avail:[568,700,967,1182],train:1298,trainabl:1298,transpos:[160,339,470,763,1083],tree:1256,tril:[80,211,394,517,648,845],try_else_non:1084,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[82,86,213,217,396,400,519,523,650,654,847,850],uint8_img_to_float_img:1112,unifi:1183,unify_arrai:1184,unify_it:1185,unify_nest:1186,unset_debug_mod:49,unset_default_devic:968,unset_default_dtyp:990,unset_default_float_dtyp:991,unset_default_int_dtyp:992,unset_framework:71,unset_with_grad:1102,unstack:[161,340,471,604,764,1085],updat:43,used_mem_on_dev:969,used_mem_on_nod:1187,util:[111,237,425,548,679,875],valid_dtyp:993,value_is_nan:1086,variabl:[348,477,611,772,1103],variable_data:[773,1104],vector_norm:[103,229,417,540,671,867],vector_to_skew_symmetric_matrix:[173,358,485,620,785,1120],verbos:1300,vision:58,where:[341,765,1087,1256],why:1302,with_grad:1105,wrapper:72,write:1299,your:43,zero:[81,212,395,518,649,846,1272],zero_pad:[342,605,766,1088],zeros_lik:[162,343,472,606,767,1089]}})